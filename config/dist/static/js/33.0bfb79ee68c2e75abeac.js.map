{"version":3,"sources":["webpack:///src/components/logs/logs.vue","webpack:///./src/components/logs/logs.vue?438e","webpack:///./src/components/logs/logs.vue"],"names":["logs","emitter","logRebuild","logTables","getCustomHeadData","allAcePageNum","logsActiveName","name","allAceCurPage","getAllAccesslogs","wafCurPage","wafPageNum","getWaflogs","aceCurPage","acePageNum","getAccesslogs","audCurPage","audPageNum","getAuditlogs","errCurPage","errPageNum","getErrorlogs","systemCurPage","systemPageNum","getSystemlogs","cmCurPage","cmPageNum","getCmlogs","pageNum","allaccess","value","access","waf","audit","this","starttime","endtime","sttime","edtime","dateTimeLong","Date","filterObj","fromTime","endTime","passqueryStringObj","fromNum","sizeNum","then","res","hits","logResArr","err","passtring","aceTotalNum","json","method","queryPara","remoteAddress","uri","status","timeTaken","audLogsItem","bodyArr","error","errArr","_source","level","message","errLogsItem","system","systemArr","item","cm","eleSource","pid","system_info","class_name","requeryObj","constvar","obj","val","getSeconds","n","getUTCSeconds","logs_logs","render","_vm","_h","$createElement","_c","_self","staticClass","on","click","hideSDURLMenu","tab-click","logsHandleClick","model","callback","$$v","expression","adminRoles","auditRoles","attrs","label","key","tableKeyArr","tableKeyArrAllAccess","dynamicTag","allAceLogsHeadData","refilterColBy","refilterColByAllAccess","requeryRowBy","requeryRowByAllAccess","_v","ref","isZhEn","isen","logType","tabheadData","tabodyData","allAceLogsBodyData","totalNum","allAceTotalNum","passquerystring","passQuerystring","isLogLoding","allAccessLoading","getChangeLogData","_e","$t","tableKeyArrWaf","wafLogsHeadData","refilterColByWaf","requeryRowByWaf","wafLogsBodyData","wafTotalNum","wafLoading","tableKeyArrAccess","aceLogsHeadData","refilterColByAccess","requeryRowByAccess","aceLogsBodyData","accessLoading","showSDURLMenu","tableKeyArrAudit","audLogsHeadData","refilterColByAudit","requeryRowByAudit","audLogsBodyData","audTotalNum","auditLoading","errLogsHeadData","errLogsBodyData","errTotalNum","errorLoading","systemLogsHeadData","systemLogsBodyData","systemTotalNum","systemLoading","cmform","label-width","placeholder","change","cmlogs","$set","cmLogsHeadData","isShowPage","cmLogsBodyData","cmTotalNum","cmLoading","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/33.0bfb79ee68c2e75abeac.js","sourcesContent":["<template>\r\n  <div class=\"logs-wrapper\" @click=\"hideSDURLMenu\">\r\n    <el-tabs v-model=\"logsActiveName\" @tab-click=\"logsHandleClick\" class=\"big-tabs\"> \r\n      <el-tab-pane label=\"日志记录\" name=\"allaccess\" v-if=\"adminRoles || !auditRoles\">\r\n        <log-rebuild :tableKeyArr='tableKeyArrAllAccess' :dynamicTag='allAceLogsHeadData' :key='1' @refilterColBy='refilterColByAllAccess' @requeryRowBy='requeryRowByAllAccess'></log-rebuild>\r\n        <log-tables ref=\"log_tablesAllAccess\" :isZhEn=\"isen\" :logType=\"logsActiveName\" :key='2' :tabheadData=\"allAceLogsHeadData\" :tabodyData=\"allAceLogsBodyData\" :totalNum=\"allAceTotalNum\" @getChangeLogData=\"getAllAccesslogs\" :passquerystring=\"passQuerystring\" :isLogLoding=\"allAccessLoading\"></log-tables>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane :label=\"$t('lg.gongji')\" name=\"waf\" v-if=\"adminRoles || !auditRoles\">\r\n        <log-rebuild :tableKeyArr='tableKeyArrWaf' :dynamicTag='wafLogsHeadData' :key='3' @refilterColBy='refilterColByWaf' @requeryRowBy='requeryRowByWaf'></log-rebuild>\r\n        <log-tables ref=\"log_tablesWaf\" :isZhEn=\"isen\" :logType=\"logsActiveName\" :key='4' :tabheadData=\"wafLogsHeadData\" :tabodyData=\"wafLogsBodyData\" :totalNum=\"wafTotalNum\" @getChangeLogData=\"getWaflogs\" :isLogLoding=\"wafLoading\"></log-tables>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane :label=\"$t('lg.fangwen')\" name=\"access\" v-if=\"adminRoles || !auditRoles\">\r\n        <log-rebuild :tableKeyArr='tableKeyArrAccess' :dynamicTag='aceLogsHeadData' :key='5' @refilterColBy='refilterColByAccess' @requeryRowBy='requeryRowByAccess'></log-rebuild>\r\n        <log-tables ref=\"log_tablesAccess\" :isZhEn=\"isen\" :logType=\"logsActiveName\" :key='6' :tabheadData=\"aceLogsHeadData\" :tabodyData=\"aceLogsBodyData\" :totalNum=\"aceTotalNum\" @getChangeLogData=\"getAccesslogs\" :isLogLoding=\"accessLoading\" :passquerystring=\"passQuerystring\" :showSDURLMenu='showSDURLMenu'></log-tables>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"审计日志\" name=\"audit\" v-if=\"adminRoles || auditRoles\">\r\n        <log-rebuild :tableKeyArr='tableKeyArrAudit' :dynamicTag='audLogsHeadData' :key='7' @refilterColBy='refilterColByAudit' @requeryRowBy='requeryRowByAudit'></log-rebuild>\r\n        <log-tables ref=\"log_tablesAudit\" :isZhEn=\"isen\" :logType=\"logsActiveName\" :key='8' :tabheadData=\"audLogsHeadData\" :tabodyData=\"audLogsBodyData\" :totalNum=\"audTotalNum\"  @getChangeLogData=\"getAuditlogs\" :isLogLoding=\"auditLoading\"></log-tables>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane :label=\"$t('lg.errorlog')\" name=\"error\" v-if=\"adminRoles || !auditRoles\">\r\n        <log-tables :logType=\"logsActiveName\" :isZhEn=\"isen\" :key='3' :tabheadData=\"errLogsHeadData\" :tabodyData=\"errLogsBodyData\" :totalNum=\"errTotalNum\"  @getChangeLogData=\"getErrorlogs\" :isLogLoding=\"errorLoading\"></log-tables>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"系统日志\" name=\"system\" v-if=\"adminRoles || !auditRoles\">\r\n        <log-tables :logType=\"logsActiveName\" :isZhEn=\"isen\" :key='3' :tabheadData=\"systemLogsHeadData\" :tabodyData=\"systemLogsBodyData\" :totalNum=\"systemTotalNum\"  @getChangeLogData=\"getSystemlogs\" :isLogLoding=\"systemLoading\"></log-tables>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"管理平台日志\" name=\"cm\" v-if=\"adminRoles || !auditRoles\">\r\n        <el-form ref=\"cmform\" :model=\"cmform\" label-width=\"80px\">\r\n        <el-form-item label=\"日志等级\">\r\n          <el-select v-model=\"cmform.level\" placeholder=\"请选择日志等级\" @change=\"cmlogs\">\r\n            <el-option label=\"INFO\" value=\"INFO\"></el-option>\r\n            <el-option label=\"WARN\" value=\"WARN\"></el-option>\r\n            <el-option label=\"ERROR\" value=\"ERROR\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n        <log-tables :logType=\"logsActiveName\" :isZhEn=\"isen\" :tabheadData=\"cmLogsHeadData\" :isShowPage=\"isShowPage\" :tabodyData=\"cmLogsBodyData\" :totalNum=\"cmTotalNum\"  @getChangeLogData=\"getCmlogs\" :isLogLoding=\"cmLoading\"></log-tables>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport {SERVER_API_URL} from '@/conf/constvar';\r\nimport * as types from \"@/store/types\";\r\nimport client from \"@/components/es/connection\";\r\nimport toSddate from \"@/assets/js/tosddate\";\r\nimport toISO8601 from \"@/assets/js/iso8601\";\r\nimport Emitter from \"element-ui/src/mixins/emitter\"; //使得其子孙组件能直接调用父组件的方法等等作用 \r\nimport {logskeys} from \"@/assets/js/logskeys\";\r\nimport logTables from \"@/components/logs/logTables\";\r\nimport logRebuild from \"@/components/logs/logRebuild\";\r\nimport prmoSearchStr from '@/assets/js/prmoSearch.js'//防护模式、监控模式 不同的查询条件 这里目前只用到防护模式\r\nimport {handleAccesslogData , handleWaflogData} from '@/assets/js/tool';\r\nexport default {\r\n  mixins: [Emitter],\r\n  componentName: \"logs\", //给父组件取名，以供后辈组件找到这个父辈组件\r\n  components: {\r\n    logRebuild,\r\n    logTables\r\n  },\r\n  // this.boradcast('ElRadioGroup', 'handleChange', this.model),\r\n  // provide(){   //传值给子孙组件，对应 inject 使用 ，不能传响应式的数据（可把数据改变之后再传给后辈组件）\r\n  //   return{chr:this.logsActiveName}\r\n  // },\r\n\r\n  created() {\r\n    var myRole=sessionStorage.getItem('myRoles');//用户为管理员时，可以有最大权限。为审计时，只能查看日志里面的审计日志，为普通用户时，可查看除审计日志外的其他日志。\r\n    if(myRole=='ADMIN'){\r\n      this.adminRoles=true;\r\n      this.auditRoles=false;\r\n    }else if(myRole=='USER'){\r\n      this.adminRoles=false;\r\n      this.auditRoles=false;\r\n    }else if(myRole=='AUDIT'){\r\n      this.adminRoles=false;\r\n      this.auditRoles=true;\r\n      this.logsActiveName='audit';\r\n    }\r\n\r\n    this.getCustomHeadData();\r\n    this.getAllAccesslogs({curPage: this.allAceCurPage, pageNum: this.allAcePageNum});\r\n    this.isen=localStorage.getItem('lang')==\"en\"?true:false;\r\n  },\r\n  watch: {\r\n    \"$store.state.mydatedata.timestampnow\": function() {\r\n      this.logsHandleClick({name:this.logsActiveName})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      adminRoles:false,//当前用户的权限是管理员时，只显示所有\r\n      auditRoles:false,//当前用户的权限是审计用户时，只显示审计日志内容\r\n\r\n      logsActiveName: \"allaccess\",\r\n      \r\n      // all access.log \r\n      allAccessLoading: false,\r\n      tableKeyArrAllAccess:[...logskeys.access],//access.log总共（默认）显示的字段\r\n      allAceLogsHeadData: [],//access.log用户自定义显示的字段\r\n      allAceLogsBodyData: [],//传入logTables.vue子组件的表体数据\r\n      allAceCurPage: 1, //当前页码\r\n      allAcePageNum: 10, //每页条数\r\n      allAceTotalNum: 0, //总条数\r\n\r\n      passQuerystring:{},\r\n\r\n      // waf.log\r\n      wafLoading: false,//loading\r\n      tableKeyArrWaf:[...logskeys.waf],//waf.log总共（默认）显示的字段\r\n      wafLogsHeadData: [], //waf.log用户自定义显示的字段 \r\n      wafLogsBodyData: [], //传入logTables.vue子组件的表体数据\r\n      wafCurPage: 1, //当前页码\r\n      wafPageNum: 10, //每页条数\r\n      wafTotalNum: 0, //总条数 值传这个到子组件里\r\n\r\n      //access.log\r\n      accessLoading: false,\r\n      tableKeyArrAccess:[...logskeys.access],//access.log总共（默认）显示的字段\r\n      aceLogsHeadData: [],//access.log用户自定义显示的字段\r\n      aceLogsBodyData: [],//传入logTables.vue子组件的表体数据\r\n      aceCurPage: 1, //当前页码\r\n      acePageNum: 10, //每页条数\r\n      aceTotalNum: 0, //总条数\r\n\r\n      //audit.log\r\n      auditLoading:false,\r\n      tableKeyArrAudit:[...logskeys.audit],//access.log总共（默认）显示的字段\r\n      audLogsHeadData: [],\r\n      audLogsBodyData: [],\r\n      audCurPage: 1, //当前页码\r\n      audPageNum: 10, //每页条数\r\n      audTotalNum: 0, //总条数\r\n\r\n      //error.log\r\n      errorLoading: false, \r\n      errLogsHeadData: [],\r\n      errLogsBodyData: [],\r\n      errCurPage: 1, //当前页码\r\n      errPageNum: 10, //每页条数\r\n      errTotalNum: 0, //总条数\r\n\r\n      systemLoading: false, \r\n      systemLogsHeadData:[],\r\n      systemLogsBodyData:[],\r\n      systemCurPage: 1, //当前页码\r\n      systemPageNum: 10, //每页条数\r\n      systemTotalNum: 0, //总条数\r\n\r\n      cmLoading: false, \r\n      cmLogsHeadData:[],\r\n      cmLogsBodyData:[],\r\n      cmCurPage: 1, //当前页码\r\n      cmPageNum: 10, //每页条数\r\n      cmTotalNum: 0, //总条数\r\n      cmform:{\r\n        level:''\r\n      },\r\n      isShowPage:false,\r\n      filterObj: {\"match_all\": {}}, //接收从孙组件 logRequery 传出来的查询条件\r\n      keyObj:{\r\n        allaccess:'logsAllAccess',\r\n        waf:'logsWaf',\r\n        access:'logsAccess',\r\n        audit:'logsAudit'\r\n      },\r\n      isen:false\r\n    };\r\n  },\r\n  methods: {\r\n    logsHandleClick(tab, event) {//切换tab\r\n      if(event){//手动点击触发时\r\n        this.allAceLogsBodyData = [];//清空数据，避免闪现\r\n        this.wafLogsBodyData = []; \r\n        this.aceLogsBodyData = [];\r\n        this.audLogsBodyData = [];\r\n        this.errLogsBodyData = [];\r\n        this.systemLogsBodyData=[];\r\n        this.cmLogsBodyData=[];\r\n        this.cmform.level=\"\";\r\n        this.isShowPage=false;\r\n        this.broadcast('logRequery',\"clearData\");//清空孙组件里logRequry的查询条件输入框里的内容，要引入Emitter\r\n        this.filterObj = {\"match_all\": {}}; //清空带入的查询条件\r\n      }\r\n\r\n      const tabName = tab.name;\r\n      const funLogObj = {\r\n        allaccess: {\r\n          curPage: this.allAceCurPage,\r\n          pageNum: this.allAcePageNum,\r\n          getLogsFun: this.getAllAccesslogs\r\n        },\r\n        waf: {\r\n          curPage: this.wafCurPage,\r\n          pageNum: this.wafPageNum,\r\n          getLogsFun: this.getWaflogs\r\n        },\r\n        access: {\r\n          curPage: this.aceCurPage,\r\n          pageNum: this.acePageNum,\r\n          getLogsFun: this.getAccesslogs\r\n        },\r\n        audit: {\r\n          curPage: this.audCurPage,\r\n          pageNum: this.audPageNum,\r\n          getLogsFun: this.getAuditlogs\r\n        },\r\n        error: {\r\n          curPage: this.errCurPage,\r\n          pageNum: this.errPageNum,\r\n          getLogsFun: this.getErrorlogs\r\n        },\r\n        system: {\r\n          curPage: this.systemCurPage,\r\n          pageNum: this.systemPageNum,\r\n          getLogsFun: this.getSystemlogs\r\n        },\r\n        cm: {\r\n          curPage: this.cmCurPage,\r\n          pageNum: this.cmPageNum,\r\n          getLogsFun: this.getCmlogs\r\n        }\r\n      }\r\n      this.$nextTick(() => {\r\n        funLogObj[tabName].getLogsFun({curPage: funLogObj[tabName].curPage, pageNum: funLogObj[tabName].pageNum})\r\n      })\r\n    },\r\n    getCustomHeadData() { // 获取waf.log、access.log、audit.log表头（用户自定义的表头）\r\n      var url = SERVER_API_URL + `/pe/shadow/kv/${this.keyObj.allaccess}`;\r\n      axios.get(url).then(res =>{\r\n        if(!res.data.data){\r\n          this.allAceLogsHeadData = [...logskeys.access]\r\n        }else{\r\n          this.allAceLogsHeadData = res.data.data.value;\r\n        }\r\n      })\r\n      var url = SERVER_API_URL + `/pe/shadow/kv/${this.keyObj.waf}`;\r\n      axios.get(url).then(res =>{\r\n        if(!res.data.data){\r\n          this.wafLogsHeadData = [...logskeys.waf]\r\n        }else{\r\n          this.wafLogsHeadData = res.data.data.value;\r\n        }\r\n      })\r\n      var url2 = SERVER_API_URL + `/pe/shadow/kv/${this.keyObj.access}`\r\n      axios.get(url2).then(res =>{\r\n        if(!res.data.data){\r\n          this.aceLogsHeadData = [...logskeys.access]\r\n        }else{\r\n          this.aceLogsHeadData = res.data.data.value;\r\n        }\r\n      })\r\n      var url3 = SERVER_API_URL + `/pe/shadow/kv/${this.keyObj.audit}`\r\n      axios.get(url3).then(res =>{\r\n        if(!res.data.data){\r\n          this.audLogsHeadData = [...logskeys.audit]\r\n        }else{\r\n          this.audLogsHeadData = res.data.data.value;\r\n        }\r\n      })\r\n    },\r\n    getAllAccesslogs(pageObj) {\r\n      // console.log(pageObj)\r\n      var _this = this;\r\n      var fromNum = 0, sizeNum = 0;//获取页面参数\r\n      fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      sizeNum = pageObj.pageNum;\r\n\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toISO8601(sttime),\r\n          endTime2 = toISO8601(edtime);\r\n      var fromTime = fromTime2 || toISO8601(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toISO8601(new Date());\r\n      _this.allAccessLoading = true;\r\n      let passqueryStringObj={\r\n          \"track_total_hits\": true, \r\n          sort: {\r\n            \"@timestamp\": \"desc\"\r\n          },\r\n          query: {\r\n            bool: {\r\n              filter: _this.filterObj,\r\n              must: [\r\n                {\r\n                  exists: {\r\n                    field: \"shadow.access.method\"\r\n                  }\r\n                },\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      gte: fromTime,\r\n                      lte: endTime\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        };\r\n      _this.passQuerystring=JSON.stringify(passqueryStringObj);\r\n\r\n      client.search({\r\n        index: \"shadow-filebeat*\",\r\n        from: fromNum,\r\n        size: sizeNum,\r\n        body: passqueryStringObj\r\n      }).then(res => {\r\n        // console.log(res)\r\n        _this.allAceTotalNum = res.hits.total.value;\r\n        let logResArr = res.hits.hits;\r\n\r\n        // 获取access.log表体数据\r\n        _this.allAceLogsBodyData = handleAccesslogData(logResArr);\r\n\r\n        _this.allAccessLoading = false;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    getWaflogs(pageObj) {//恶意攻击 获取waf.log表体数据\r\n      // console.log(pageObj)\r\n      var _this = this;\r\n      var fromNum = 0, sizeNum = 0;//获取页面参数\r\n      fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      sizeNum = pageObj.pageNum;\r\n\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toSddate(sttime),\r\n          endTime2 = toSddate(edtime);\r\n      var fromTime =fromTime2 ||toSddate(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toSddate(new Date());\r\n      _this.wafLoading = true;\r\n      client.search({\r\n        index: \"shadow-filebeat*\",\r\n        from: fromNum,\r\n        size: sizeNum,\r\n        body: {\r\n          // size: 10,\r\n          sort: {\r\n            \"@timestamp\": \"desc\"\r\n          },\r\n          query: {\r\n            bool: {\r\n              filter: _this.filterObj,\r\n              must_not: {\r\n                exists: {\r\n                  field: \"error\"\r\n                }\r\n              },\r\n              must: [\r\n                {\r\n                  term: {\r\n                    \"log.file.path\": \"/usr/local/shadow/logs/shadow_waf.log\"\r\n                  }\r\n                },\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      from: fromTime,\r\n                      to: endTime,\r\n                      include_lower: true,\r\n                      include_upper: true\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }).then(res => {\r\n        // console.log(res)\r\n        _this.wafTotalNum = res.hits.total.value;\r\n        let logResArr = res.hits.hits;\r\n\r\n        // 获取waf.log表体\r\n        _this.wafLogsBodyData = handleWaflogData(logResArr);\r\n        _this.wafLoading = false;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    getAccesslogs(pageObj) {//恶意访问 获取access.log表体数据\r\n      // console.log(pageObj)\r\n      var _this = this;\r\n      var fromNum = 0, sizeNum = 0;//获取页面参数\r\n      fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      sizeNum = pageObj.pageNum;\r\n\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toISO8601(sttime),\r\n          endTime2 = toISO8601(edtime);\r\n      var fromTime = fromTime2 || toISO8601(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toISO8601(new Date());\r\n      _this.accessLoading = true;\r\n      let passtring={\r\n          sort: {\r\n            \"@timestamp\": \"desc\"\r\n          },\r\n          \"track_total_hits\": true, \r\n          query: {\r\n            bool: {\r\n              filter: _this.filterObj,\r\n              must: [\r\n               // ...prmoSearchStr['protectChart']['a1'],\r\n                {\r\n                  exists: {\r\n                    field: \"shadow.access.method\"\r\n                  }\r\n                },\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      gte: fromTime,\r\n                      lte: endTime\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        };\r\n        _this.passQuerystring=JSON.stringify(passtring);\r\n\r\n      client.search({\r\n        index: \"shadow-filebeat-warn*\",\r\n        from: fromNum,\r\n        size: sizeNum,\r\n        body: passtring\r\n      }).then(res => {\r\n        _this.aceTotalNum = res.hits.total.value;\r\n        console.log(_this.aceTotalNum)\r\n        let logResArr = res.hits.hits;\r\n\r\n        // 获取access.log表体数据\r\n        _this.aceLogsBodyData = handleAccesslogData(logResArr);\r\n\r\n        _this.accessLoading = false;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    getAuditlogs(pageObj){ //审计日志 获取audit.log表体数据\r\n      var _this = this;\r\n      var fromNum = 0, sizeNum = 0;  //获取页面参数\r\n      fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      sizeNum = pageObj.pageNum;\r\n\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toSddate(sttime),\r\n          endTime2 = toSddate(edtime);\r\n      var fromTime = fromTime2 || toSddate(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toSddate(new Date());\r\n      _this.auditLoading = true;\r\n\r\n      var searchAuditObj={\r\n          // size: 10,\r\n          \"sort\": [\r\n            {\r\n              \"json.timestamp\": {\r\n                \"order\": \"desc\"\r\n              }\r\n            }\r\n          ],\r\n          \"query\": {\r\n            \"bool\": {\r\n              filter: _this.filterObj,\r\n              \"must\": [\r\n                {\r\n                  \"term\": {\r\n                    \"tags\":  \"audit\"\r\n                  }\r\n                },\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      gte: fromTime,\r\n                      lte: endTime\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        };\r\n\r\n      var url = SERVER_API_URL + 'pe/shadow/audit?page='+fromNum+'&size='+sizeNum;\r\n      axios.post(url,searchAuditObj).then(res=>{\r\n        // console.log(res)\r\n        if(res.data.responseCode==0){\r\n          _this.audTotalNum = res.data.data.hits.total.value;\r\n          let logResArr = res.data.data.hits.hits;\r\n\r\n          // 获取audit.log表体数据\r\n          var iso8601 = _this.$options.filters[\"iso8601\"]; //获取使用局部的filter\r\n          let bodyArr = [];\r\n\r\n          logResArr.forEach(ele => {\r\n            // console.log(ele)\r\n            var eleSource = ele._source.json;\r\n            var audLogsItem = {};\r\n\r\n            audLogsItem.date = iso8601(eleSource[\"timestamp\"]);\r\n            audLogsItem.name = eleSource.principal.name;\r\n            audLogsItem.method = eleSource.request.method;\r\n            audLogsItem.queryPara = eleSource.request.queryPara;\r\n            audLogsItem.remoteAddress = eleSource.request.remoteAddress;\r\n            // audLogsItem.uri = eleSource.request.uri;\r\n            audLogsItem.uri = eleSource.request.description?eleSource.request.uri+'（说明:'+eleSource.request.description+'）':eleSource.request.uri;\r\n            audLogsItem.status = eleSource.response.status;\r\n            audLogsItem.timeTaken = eleSource.timeTaken;\r\n\r\n            bodyArr.push(audLogsItem);\r\n          });\r\n          // console.log(bodyArr)\r\n          _this.audLogsBodyData = bodyArr;\r\n          _this.auditLoading = false;\r\n         \r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    getErrorlogs(pageObj) {//错误日志\r\n      // console.log(pageObj)\r\n      var _this = this;\r\n      var fromNum = 0, sizeNum = 0;  //获取页面参数\r\n      fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      sizeNum = pageObj.pageNum;\r\n\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toSddate(sttime),\r\n          endTime2 = toSddate(edtime);\r\n      var fromTime = fromTime2 || toSddate(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toSddate(new Date());\r\n      _this.errorLoading = true;\r\n      client.search({\r\n        index: \"shadow-filebeat*\",\r\n        from: fromNum,\r\n        size: sizeNum,\r\n        body: {\r\n          // size: 10,\r\n          sort: {\r\n            \"@timestamp\": \"desc\"\r\n          },\r\n          query: {\r\n            bool: {\r\n              \"filter\":[\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      from: fromTime,\r\n                      to: endTime,\r\n                      include_lower: true,\r\n                      include_upper: true\r\n                    }\r\n                  }\r\n                }\r\n              ],\r\n              must: [\r\n                {\r\n                  term: {\r\n                    \"log.file.path\": \"/usr/local/shadow/logs/error.log\"\r\n                  }\r\n                }\r\n              ],\r\n              must_not: [\r\n                {\r\n                  match: {\r\n                    \"shadow.access.token\":\"00000000000000000000000000000000\"\r\n                  }\r\n                },\r\n                {\r\n                  match: {\r\n                    \"shadow.access.token\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n                  }\r\n                },\r\n                {\r\n                  match: {\r\n                    \"shadow.error.level\": \"notcie\"\r\n                  }\r\n                },\r\n                {\r\n                  exists: {\r\n                    field: \"error\"\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }).then(res => {\r\n        // console.log(res)\r\n        _this.errTotalNum = res.hits.total.value;\r\n        let logResArr = res.hits.hits;\r\n\r\n        // 获取error.log表头数据\r\n        let errArr = logskeys.error;\r\n        _this.errLogsHeadData = errArr;\r\n\r\n        // 获取error.log表体数据\r\n        var toSdDate = _this.$options.filters[\"toSdDate\"]; //获取使用局部的filter\r\n        let bodyArr = [];\r\n        logResArr.forEach(ele => {\r\n          // console.log(ele)\r\n          var eleSource = ele._source;\r\n          var errLogsItem = {};\r\n\r\n          errLogsItem.date = toSdDate(eleSource[\"read_timestamp\"]);\r\n          errLogsItem.level = eleSource.shadow.error.level;\r\n          errLogsItem.message = eleSource.shadow.error.message;\r\n\r\n          bodyArr.push(errLogsItem);\r\n        });\r\n        _this.errLogsBodyData = bodyArr;\r\n        _this.errorLoading = false;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    getSystemlogs(pageObj) {//system日志\r\n      // console.log(pageObj)\r\n      var _this = this;\r\n      var fromNum = 0, sizeNum = 0;  //获取页面参数\r\n      fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      sizeNum = pageObj.pageNum;\r\n\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toSddate(sttime),\r\n          endTime2 = toSddate(edtime);\r\n      var fromTime = fromTime2 || toSddate(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toSddate(new Date());\r\n      _this.systemLoading = true;\r\n      client.search({\r\n        index: \"cm-system-*\",\r\n        from: fromNum,\r\n        size: sizeNum,\r\n        body: {\r\n          // size: 10,\r\n          sort: {\r\n            \"@timestamp\": \"desc\"\r\n          },\r\n          query: {\r\n            bool: {\r\n              \"filter\":[\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      from: fromTime,\r\n                      to: endTime,\r\n                      include_lower: true,\r\n                      include_upper: true\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }).then(res => {\r\n       //  console.log(res)\r\n         _this.systemTotalNum = res.hits.total.value;\r\n         let logResArr = res.hits.hits;\r\n\r\n        // 获取error.log表头数据\r\n        let systemArr = logskeys.system;\r\n        _this.systemLogsHeadData = systemArr;\r\n\r\n        // 获取error.log表体数据\r\n        var toSdDate = _this.$options.filters[\"toSdDate\"]; //获取使用局部的filter\r\n        let bodyArr = [];\r\n        logResArr.forEach(ele => {\r\n          // console.log(ele)\r\n          var eleSource = ele._source;\r\n          var errLogsItem = {};\r\n\r\n          errLogsItem.date = toSdDate(eleSource[\"@timestamp\"]);\r\n          errLogsItem.name = eleSource.process.name;\r\n          errLogsItem.message = eleSource.message;\r\n\r\n          bodyArr.push(errLogsItem);\r\n        });\r\n        _this.systemLogsBodyData = bodyArr;\r\n        _this.systemLoading = false;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    cmlogs(item){\r\n      var _this = this;\r\n      // let pageObj={curPage: 1, pageNum: 1000};\r\n      // var fromNum = 0, sizeNum = 0;  //获取页面参数\r\n      // fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      // sizeNum = pageObj.pageNum;\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toSddate(sttime),\r\n          endTime2 = toSddate(edtime);\r\n      var fromTime = fromTime2 || toSddate(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toSddate(new Date());\r\n      _this.cmLoading = true;\r\n      client.search({\r\n        index: \"cm-log-*\",\r\n        from: 0,\r\n        size: 1000,\r\n        body: {\r\n          // size: 10,\r\n          sort: {\r\n            \"@timestamp\": \"desc\"\r\n          },\r\n          query: {\r\n            bool: {\r\n              \"filter\":[\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      from: fromTime,\r\n                      to: endTime,\r\n                      include_lower: true,\r\n                      include_upper: true\r\n                    }\r\n                  }\r\n                }\r\n              ],\r\n              must: [\r\n                {\r\n                  match: {\r\n                    \"cm.level\":item\r\n                  }\r\n                }\r\n              ],\r\n            }\r\n          }\r\n        }\r\n      }).then(res => {\r\n       //  console.log(res)\r\n         _this.cmTotalNum = 0;\r\n         _this.isShowPage=true;\r\n         let logResArr = res.hits.hits;\r\n\r\n        // 获取error.log表头数据\r\n        let systemArr = logskeys.cm;\r\n        _this.cmLogsHeadData = systemArr;\r\n\r\n        // 获取error.log表体数据\r\n        var toSdDate = _this.$options.filters[\"toSdDate\"]; //获取使用局部的filter\r\n        let bodyArr = [];\r\n        var eleSource;\r\n        var errLogsItem = {};\r\n        logResArr.forEach(ele => {\r\n          eleSource = ele._source;\r\n          if(eleSource.cm){\r\n            errLogsItem.date = toSdDate(eleSource[\"@timestamp\"]);\r\n            errLogsItem.pid = eleSource.cm.pid;\r\n            errLogsItem.level = eleSource.cm.level;\r\n            errLogsItem.message = eleSource.cm.message;\r\n            errLogsItem.system_info = eleSource.cm.system_info;\r\n            errLogsItem.class_name = eleSource.cm.class_name;\r\n          }\r\n          bodyArr.push(errLogsItem);\r\n        });\r\n        _this.cmLogsBodyData = bodyArr;\r\n        _this.cmLoading = false;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    getCmlogs(pageObj) {//cm日志\r\n      // console.log(pageObj)\r\n      var _this = this;\r\n      var fromNum = 0, sizeNum = 0;  //获取页面参数\r\n      fromNum = (pageObj.curPage - 1) * pageObj.pageNum;\r\n      sizeNum = pageObj.pageNum;\r\n\r\n      var sttime = _this.$store.state.mydatedata.starttime,\r\n          edtime = _this.$store.state.mydatedata.endtime;\r\n      var fromTime2 = toSddate(sttime),\r\n          endTime2 = toSddate(edtime);\r\n      var fromTime = fromTime2 || toSddate(new Date(Date.now() - _this.$store.state.dateTimeLong)),\r\n          endTime = endTime2 || toSddate(new Date());\r\n      _this.cmLoading = true;\r\n      client.search({\r\n        index: \"cm-log-*\",\r\n        from: fromNum,\r\n        size: sizeNum,\r\n        body: {\r\n          // size: 10,\r\n          sort: {\r\n            \"@timestamp\": \"desc\"\r\n          },\r\n          query: {\r\n            bool: {\r\n              \"filter\":[\r\n                {\r\n                  range: {\r\n                    \"@timestamp\": {\r\n                      from: fromTime,\r\n                      to: endTime,\r\n                      include_lower: true,\r\n                      include_upper: true\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }).then(res => {\r\n       //  console.log(res)\r\n         _this.cmTotalNum = res.hits.total.value;\r\n        // _this.isCmPageShowByQ=false;\r\n         let logResArr = res.hits.hits;\r\n\r\n        // 获取error.log表头数据\r\n        let systemArr = logskeys.cm;\r\n        _this.cmLogsHeadData = systemArr;\r\n\r\n        // 获取error.log表体数据\r\n        var toSdDate = _this.$options.filters[\"toSdDate\"]; //获取使用局部的filter\r\n        let bodyArr = [];\r\n        var eleSource;\r\n        var errLogsItem = {};\r\n        logResArr.forEach(ele => {\r\n          eleSource = ele._source;\r\n          if(eleSource.cm){\r\n            errLogsItem.date = toSdDate(eleSource[\"@timestamp\"]);\r\n            errLogsItem.pid = eleSource.cm.pid;\r\n            errLogsItem.level = eleSource.cm.level;\r\n            errLogsItem.message = eleSource.cm.message;\r\n            errLogsItem.system_info = eleSource.cm.system_info;\r\n            errLogsItem.class_name = eleSource.cm.class_name;\r\n          }\r\n          bodyArr.push(errLogsItem);\r\n        });\r\n        _this.cmLogsBodyData = bodyArr;\r\n        _this.cmLoading = false;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    requeryRowByAllAccess(obj){ //用户通过requery孙组件筛选access.log显示的行\r\n      this.filterObj=obj.requeryObj;\r\n      this.getAllAccesslogs({curPage: this.allAceCurPage, pageNum: this.allAcePageNum});\r\n      if(this.$refs.log_tablesAllAccess) this.$refs.log_tablesAllAccess.tabCurPage=1;//当用户点击查询后，查询结果的页码要回到第一页\r\n    },\r\n    requeryRowByWaf(obj){ //用户通过requery孙组件筛选waf.log显示的行\r\n      this.filterObj=obj.requeryObj;//拿到查询条件\r\n      this.getWaflogs({curPage: this.wafCurPage, pageNum: this.wafPageNum });//再次调用查询\r\n      if(this.$refs.log_tablesWaf) this.$refs.log_tablesWaf.tabCurPage=1;//当用户点击查询后，查询结果的页码要回到第一页\r\n    },\r\n    requeryRowByAccess(obj){ //用户通过requery孙组件筛选access.log显示的行\r\n      this.filterObj=obj.requeryObj;\r\n      this.getAccesslogs({curPage: this.aceCurPage, pageNum: this.acePageNum });\r\n      if(this.$refs.log_tablesAccess) this.$refs.log_tablesAccess.tabCurPage=1;//当用户点击查询后，查询结果的页码要回到第一页\r\n    },\r\n    requeryRowByAudit(obj){ //用户通过requery孙组件筛选audit.log显示的行\r\n      this.filterObj=obj.requeryObj;\r\n      this.getAuditlogs({curPage: this.audCurPage, pageNum: this.audPageNum });\r\n      if(this.$refs.log_tablesAudit) this.$refs.log_tablesAudit.tabCurPage=1;//当用户点击查询后，查询结果的页码要回到第一页\r\n    },\r\n    \r\n    refilterColByAllAccess(obj){\r\n      var url = SERVER_API_URL + `/pe/shadow/kv`;\r\n      axios.post(url,{logsAllAccess:obj}).then(res=>{\r\n        if(Object.keys(res.data.data.Failure)){\r\n          axios.patch(url,{logsAllAccess:obj}).then(res=>{\r\n          })\r\n        }\r\n      })\r\n      this.allAceLogsHeadData = obj;\r\n    },\r\n    refilterColByWaf(obj){ //用户通过refilter孙组件筛选waf.log显示的列，删除或者增加字段显示的时候变化头部，发送用户增删请求\r\n      var url = SERVER_API_URL + `/pe/shadow/kv`;\r\n      axios.post(url,{logsWaf:obj}).then(res=>{\r\n        if(Object.keys(res.data.data.Failure)){\r\n          axios.patch(url,{logsWaf:obj}).then(res=>{\r\n          })\r\n        }\r\n      })\r\n      this.wafLogsHeadData = obj;\r\n    },\r\n    refilterColByAccess(obj){ //用户通过refilter孙组件筛选access.log显示的列，删除或者增加字段显示的时候变化头部，发送用户增删请求\r\n      var url = SERVER_API_URL + `/pe/shadow/kv`;\r\n      axios.post(url,{logsAccess:obj}).then(res=>{\r\n        if(Object.keys(res.data.data.Failure)){\r\n          axios.patch(url,{logsAccess:obj}).then(res=>{\r\n          })\r\n        }\r\n      })\r\n      this.aceLogsHeadData = obj;\r\n    },\r\n    refilterColByAudit(obj){//用户通过refilter孙组件筛选audit.log显示的列，删除或者增加字段显示的时候变化头部，发送用户增删请求\r\n      var url = SERVER_API_URL + `/pe/shadow/kv`;\r\n      axios.post(url,{logsAudit:obj}).then(res=>{\r\n        if(Object.keys(res.data.data.Failure)){\r\n          axios.patch(url,{logsAudit:obj}).then(res=>{\r\n          })\r\n        }\r\n      })\r\n      this.audLogsHeadData = obj;\r\n    },\r\n\r\n    showSDURLMenu(index) { //右键点击对应字段 显示 表里面该字段的菜单\r\n      this.aceLogsBodyData.forEach(items => {\r\n        items.showUMenuList = false;\r\n      });\r\n      // this.accesslogsData[index].showUMenuList=true;\r\n      this.$set(this.aceLogsBodyData[index], \"showUMenuList\", true);\r\n    },\r\n    hideSDURLMenu() { //左键任意点击全局 隐藏 表里面字段的菜单\r\n      this.aceLogsBodyData.forEach(items => {\r\n        items.showUMenuList = false;\r\n      });\r\n    }\r\n  },\r\n  filters: {\r\n    toSdDate(val) {\r\n      if (!val) return;\r\n      var d = new Date(val);\r\n      function pad(n) {\r\n        return n < 10 ? \"0\" + n : n;\r\n      }\r\n      return (d.getFullYear() +\"/\" +pad(parseInt(d.getMonth()) + 1) +\"/\" +pad(d.getDate()) +\" \" +pad(d.getHours()) +\":\" +pad(d.getMinutes()) +\":\" +pad(d.getSeconds()));\r\n    },\r\n    iso8601(val) {\r\n      if(!val) return;\r\n      var d = new Date(val);\r\n      function pad(n){\r\n        return n<10 ? '0'+n : n\r\n      }\r\n      return (d.getUTCFullYear()+'/' + pad(d.getUTCMonth()+1)+'/' + pad(d.getUTCDate())+' ' + pad(d.getUTCHours())+':' + pad(d.getUTCMinutes())+':' + pad(d.getUTCSeconds()));\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.logs-wrapper{\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  padding: 5px 15px 15px;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n.logs-wrapper .big-tabs{\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.logs-wrapper .el-tabs__content{\r\n  flex:1;\r\n}\r\n.logs-wrapper .el-tab-pane{\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.icon-row {\r\n  line-height: 40px;\r\n}\r\n.icon-row i {\r\n  cursor: pointer;\r\n  margin-right: 8px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/logs/logs.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"logs-wrapper\",on:{\"click\":_vm.hideSDURLMenu}},[_c('el-tabs',{staticClass:\"big-tabs\",on:{\"tab-click\":_vm.logsHandleClick},model:{value:(_vm.logsActiveName),callback:function ($$v) {_vm.logsActiveName=$$v},expression:\"logsActiveName\"}},[(_vm.adminRoles || !_vm.auditRoles)?_c('el-tab-pane',{attrs:{\"label\":\"日志记录\",\"name\":\"allaccess\"}},[_c('log-rebuild',{key:1,attrs:{\"tableKeyArr\":_vm.tableKeyArrAllAccess,\"dynamicTag\":_vm.allAceLogsHeadData},on:{\"refilterColBy\":_vm.refilterColByAllAccess,\"requeryRowBy\":_vm.requeryRowByAllAccess}}),_vm._v(\" \"),_c('log-tables',{key:2,ref:\"log_tablesAllAccess\",attrs:{\"isZhEn\":_vm.isen,\"logType\":_vm.logsActiveName,\"tabheadData\":_vm.allAceLogsHeadData,\"tabodyData\":_vm.allAceLogsBodyData,\"totalNum\":_vm.allAceTotalNum,\"passquerystring\":_vm.passQuerystring,\"isLogLoding\":_vm.allAccessLoading},on:{\"getChangeLogData\":_vm.getAllAccesslogs}})],1):_vm._e(),_vm._v(\" \"),(_vm.adminRoles || !_vm.auditRoles)?_c('el-tab-pane',{attrs:{\"label\":_vm.$t('lg.gongji'),\"name\":\"waf\"}},[_c('log-rebuild',{key:3,attrs:{\"tableKeyArr\":_vm.tableKeyArrWaf,\"dynamicTag\":_vm.wafLogsHeadData},on:{\"refilterColBy\":_vm.refilterColByWaf,\"requeryRowBy\":_vm.requeryRowByWaf}}),_vm._v(\" \"),_c('log-tables',{key:4,ref:\"log_tablesWaf\",attrs:{\"isZhEn\":_vm.isen,\"logType\":_vm.logsActiveName,\"tabheadData\":_vm.wafLogsHeadData,\"tabodyData\":_vm.wafLogsBodyData,\"totalNum\":_vm.wafTotalNum,\"isLogLoding\":_vm.wafLoading},on:{\"getChangeLogData\":_vm.getWaflogs}})],1):_vm._e(),_vm._v(\" \"),(_vm.adminRoles || !_vm.auditRoles)?_c('el-tab-pane',{attrs:{\"label\":_vm.$t('lg.fangwen'),\"name\":\"access\"}},[_c('log-rebuild',{key:5,attrs:{\"tableKeyArr\":_vm.tableKeyArrAccess,\"dynamicTag\":_vm.aceLogsHeadData},on:{\"refilterColBy\":_vm.refilterColByAccess,\"requeryRowBy\":_vm.requeryRowByAccess}}),_vm._v(\" \"),_c('log-tables',{key:6,ref:\"log_tablesAccess\",attrs:{\"isZhEn\":_vm.isen,\"logType\":_vm.logsActiveName,\"tabheadData\":_vm.aceLogsHeadData,\"tabodyData\":_vm.aceLogsBodyData,\"totalNum\":_vm.aceTotalNum,\"isLogLoding\":_vm.accessLoading,\"passquerystring\":_vm.passQuerystring,\"showSDURLMenu\":_vm.showSDURLMenu},on:{\"getChangeLogData\":_vm.getAccesslogs}})],1):_vm._e(),_vm._v(\" \"),(_vm.adminRoles || _vm.auditRoles)?_c('el-tab-pane',{attrs:{\"label\":\"审计日志\",\"name\":\"audit\"}},[_c('log-rebuild',{key:7,attrs:{\"tableKeyArr\":_vm.tableKeyArrAudit,\"dynamicTag\":_vm.audLogsHeadData},on:{\"refilterColBy\":_vm.refilterColByAudit,\"requeryRowBy\":_vm.requeryRowByAudit}}),_vm._v(\" \"),_c('log-tables',{key:8,ref:\"log_tablesAudit\",attrs:{\"isZhEn\":_vm.isen,\"logType\":_vm.logsActiveName,\"tabheadData\":_vm.audLogsHeadData,\"tabodyData\":_vm.audLogsBodyData,\"totalNum\":_vm.audTotalNum,\"isLogLoding\":_vm.auditLoading},on:{\"getChangeLogData\":_vm.getAuditlogs}})],1):_vm._e(),_vm._v(\" \"),(_vm.adminRoles || !_vm.auditRoles)?_c('el-tab-pane',{attrs:{\"label\":_vm.$t('lg.errorlog'),\"name\":\"error\"}},[_c('log-tables',{key:3,attrs:{\"logType\":_vm.logsActiveName,\"isZhEn\":_vm.isen,\"tabheadData\":_vm.errLogsHeadData,\"tabodyData\":_vm.errLogsBodyData,\"totalNum\":_vm.errTotalNum,\"isLogLoding\":_vm.errorLoading},on:{\"getChangeLogData\":_vm.getErrorlogs}})],1):_vm._e(),_vm._v(\" \"),(_vm.adminRoles || !_vm.auditRoles)?_c('el-tab-pane',{attrs:{\"label\":\"系统日志\",\"name\":\"system\"}},[_c('log-tables',{key:3,attrs:{\"logType\":_vm.logsActiveName,\"isZhEn\":_vm.isen,\"tabheadData\":_vm.systemLogsHeadData,\"tabodyData\":_vm.systemLogsBodyData,\"totalNum\":_vm.systemTotalNum,\"isLogLoding\":_vm.systemLoading},on:{\"getChangeLogData\":_vm.getSystemlogs}})],1):_vm._e(),_vm._v(\" \"),(_vm.adminRoles || !_vm.auditRoles)?_c('el-tab-pane',{attrs:{\"label\":\"管理平台日志\",\"name\":\"cm\"}},[_c('el-form',{ref:\"cmform\",attrs:{\"model\":_vm.cmform,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"日志等级\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择日志等级\"},on:{\"change\":_vm.cmlogs},model:{value:(_vm.cmform.level),callback:function ($$v) {_vm.$set(_vm.cmform, \"level\", $$v)},expression:\"cmform.level\"}},[_c('el-option',{attrs:{\"label\":\"INFO\",\"value\":\"INFO\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"WARN\",\"value\":\"WARN\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"ERROR\",\"value\":\"ERROR\"}})],1)],1)],1),_vm._v(\" \"),_c('log-tables',{attrs:{\"logType\":_vm.logsActiveName,\"isZhEn\":_vm.isen,\"tabheadData\":_vm.cmLogsHeadData,\"isShowPage\":_vm.isShowPage,\"tabodyData\":_vm.cmLogsBodyData,\"totalNum\":_vm.cmTotalNum,\"isLogLoding\":_vm.cmLoading},on:{\"getChangeLogData\":_vm.getCmlogs}})],1):_vm._e()],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-86e95fbe\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/logs/logs.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-86e95fbe\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./logs.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./logs.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./logs.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-86e95fbe\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./logs.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/logs/logs.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}