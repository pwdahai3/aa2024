{"version":3,"sources":["webpack:///src/components/alarmTask/addAlarmTask.vue","webpack:///./src/components/alarmTask/addAlarmTask.vue?073c","webpack:///./src/components/alarmTask/addAlarmTask.vue","webpack:///src/components/alarmTask/timingTask.vue","webpack:///./src/components/alarmTask/timingTask.vue?c4f6","webpack:///./src/components/alarmTask/timingTask.vue","webpack:///src/components/behavior/logagg.vue","webpack:///./src/components/behavior/logagg.vue?9371","webpack:///./src/components/behavior/logagg.vue"],"names":["addAlarmTask","Object","judgeTaskTypeOptDisable","taskTypeDisabledObj","key","label","alarmTaskTypeTxt","val","timingTaskPop","alarmTask_addAlarmTask","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","gutter","span","staticStyle","width","type","on","click","$event","isShowSelect","_v","_s","$t","directives","name","rawName","value","expression","clearable","placeholder","change","getCorrespondingTaskPop","model","callback","$$v","taskTypeValue","_l","item","disabled","isShow","isShowTimingTask","isNeedRefreshAddTask","hasNextStep","myTaskType","alarmTaskType","myTaskTypeTxt","alertmark","alertMark","getTimingTask","setTimingTaskClose","staticRenderFns","components_alarmTask_addAlarmTask","__webpack_require__","normalizeComponent","ssrContext","timingTask","emitter","logRebuild","logagg","logTables","waf","access","constvar","obj","requeryObj","data","rateUnitValue","strIntervalUnitVal","lteIntervalUnitVal","requestTimeUnitVal","intervalUnitVal","resArray","message","err","params","pageNum","intervalTime","now","sttime","edtime","domain","times","count","fromTime","endTime","domainVal","urlVal","counts","then","res","buckets","doc_count","itemObj","resultArr","prenum","logId","length","andorId","getLogIdStr","filterObj","_i","keyId","keyinputId","kyinputIdX","wildcardmatchJson","aggsField","aggsCount","setTimeInterval","myQueryJson","aggsObj","fromNum","sizeNum","i","j","b","ii","bucketsKey","toString","jj","push","arr0","v","pieData","seriesData","hits","logResArr","_source","level","errLogsItem","bodyArr","n","d","getMinutes","id","thisStatus","h","getSeconds","alarmTask_timingTask","ref","_e","min-width","taskTypeTxt","rate","rateUnitValueTxt","taskType","notificationType","items","index","mailSubject","url","timeInterval","intervalUnitValTxt","symbolId","aggsId","metricId","symbol2Id","metricinputId","domainName","monThreshold","minDocCount","apiIndicator","addToConfig","dfRequestTimeVal","requestTimeUnitValTxt","defaultVerifyBrowser","defaultVerifyAgent","defaultVerifyToken","timeStrInterval","strIntervalUnitValTxt","timeLteInterval","lteIntervalUnitValTxt","notification","class","taskStatu","el-icon-loading","el-icon-success shadow-icon-color-success","el-icon-warning","href","searchTime","curPage","to","path","query","urlType","strInterval","lteInterval","tag","interval","theDomian","ipType","theChartType","operationTask","status","title","editTask","deleteTask","visible","timeVisible","before-close","timeClose","update:visible","queryTimeData","props","queryTimeTreeProps","render-content","queryTimeRenderContent","timesVisible","timesClose","querytimesData","queryTimesTreeProps","queryTimesRenderContent","esSearchVisible","esSearchClose","isQueryOrAggs","tableKeyArr","tableKeyArrTask","dynamicTag","taskLogsHeadData","refilterColBy","refilterColByTask","requeryRowBy","requeryRowByTask","tbodyArr","piedata","linechartdata","getChangeLogInterval","esSearchDataChange","logType","tabheadData","tabodyData","taskLogsBodyData","totalNum","taskTotalNum","isLogLoding","showSDURLMenu","getChangeLogData","editData","editTaskItem","editTaskId","isShowTimingTaskEdit","timingTask_Component","timingTask_normalizeComponent","__webpack_exports__","echarts","Array","seriesdata","resize","qinterval","legend","xData","behavior_logagg","intervalChange","margin-right","_m","height","margin-top","Component"],"mappings":"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","file":"static/js/6.de9b663a2f7a2e579d3b.js","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"form-bg\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :span=\"2.5\">\r\n          <el-button type=\"primary\" style=\"width:100%\" @click=\"isShowSelect=true\">{{$t('lg.add')}}</el-button>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-select v-model=\"taskTypeValue\" clearable :placeholder=\"$t('lg.addalertingtype')\" style=\"width:100%\" @change=\"getCorrespondingTaskPop\" v-show=\"isShowSelect\">\r\n            <el-option\r\n              v-for=\"item in taskTypeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n              :disabled=\"item.disabled\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n    <timing-task-pop :isShow=\"isShowTimingTask\" :isNeedRefreshAddTask=\"true\" :hasNextStep=\"hasNextStep\" :myTaskType=\"alarmTaskType\" :myTaskTypeTxt=\"alarmTaskTypeTxt\" :alertmark=\"alertMark\" @getTimingTask=\"getTimingTask\" @setTimingTaskClose=\"isShowTimingTask=false;\"></timing-task-pop>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport timingTaskPop from '@/components/alarmTask/timingTaskPop';\r\nexport default {\r\n  props:{\r\n    taskTypeDisabledObj:{\r\n      type:Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isShowSelect:false,\r\n      taskTypeOptions: [{\r\n        value: 'urlCompare',\r\n        label: this.$t('lg.objbased'),\r\n      },{\r\n        value: 'apiScan',\r\n        label: this.$t('lg.apiScanbased'),\r\n      },{\r\n        value: 'tokenTime',\r\n        label: this.$t('lg.tokentimebased')\r\n      }, {\r\n        value: 'tokenCount',\r\n        label: this.$t('lg.tokencountbased')\r\n      },\r\n       {\r\n        value: 'esSearch',\r\n        label: this.$t('lg.customesqbased')\r\n      },\r\n       {\r\n        value:'maliciousAccess',\r\n        label: this.$t('lg.maccessyuanipbased')\r\n      }, {\r\n        value:'maliciousAccessOrg',\r\n        label: this.$t('lg.maccessorgipbased')\r\n      },{\r\n        value:'maliciousAttack',\r\n        label: this.$t('lg.mattackyuanipbased')\r\n      },{\r\n        value: 'cpuMax',\r\n        label: this.$t('lg.cpubased'),\r\n        disabled: false\r\n      },{\r\n        value: 'cpu_cmMax',\r\n        label: '基于‘管理平台的CPU’报警',\r\n        disabled: false\r\n      },{\r\n        value: 'memoryMax',\r\n        label: this.$t('lg.memorybased'),\r\n        disabled: false\r\n      },{\r\n        value: 'memory_cmMax',\r\n        label: '基于‘管理平台的MEMORY’报警',\r\n        disabled: false\r\n      }, \r\n      // { //流量图表报警暂时弃用\r\n      //   value: 'networkMax',    \r\n      //   label: this.$t('lg.networkbased'),\r\n      //   disabled: false\r\n      // },\r\n      {\r\n        value: 'diskRootMax',\r\n        label: this.$t('lg.diskRootbased'),\r\n        disabled: false\r\n      },{\r\n        value: 'diskRoot_cmMax',\r\n        label: '基于‘管理平台的磁盘空间（/）’报警',\r\n        disabled: false\r\n      },{\r\n        value: 'diskRoot01Max',\r\n        label: this.$t('lg.diskRoot01based'),\r\n        disabled: false\r\n      },{\r\n        value: 'diskRoot01_cmMax',\r\n        label: '基于‘管理平台的磁盘空间（/home）’报警',\r\n        disabled: false\r\n      }],\r\n      taskTypeValue: '',\r\n\r\n      alarmTaskType:'',\r\n      alarmTaskTypeTxt:'',\r\n      alertMark:'',\r\n\r\n      isShowTimingTask:false,\r\n      hasNextStep:false,\r\n    }\r\n  },\r\n  watch:{\r\n    'isShowSelect':function(){\r\n      if(this.isShowSelect){\r\n        this.judgeTaskTypeOptDisable();\r\n      }\r\n    },\r\n    'isShowTimingTask':function(){\r\n      if(!this.isShowTimingTask){\r\n        this.taskTypeValue='';\r\n        this.isShowSelect=false;\r\n      }\r\n    }\r\n  },\r\n  methods:{\r\n    judgeTaskTypeOptDisable(){\r\n      var disSelectObj = this.taskTypeDisabledObj;\r\n      // this.taskTypeOptions.forEach((ele)=>{ //写法1 这中要把 this.taskTypeOptions重新赋值 否则有问题\r\n      //   if(disSelectObj[ele.value]){\r\n      //     console.log(disSelectObj[ele.value])\r\n      //     ele.disabled=disSelectObj[ele.value];\r\n      //   }\r\n      // })\r\n\r\n      for(var key in disSelectObj){ //写法2\r\n        this.taskTypeOptions.forEach((ele)=>{\r\n          if(ele.value==key){\r\n            ele.disabled=disSelectObj[key];\r\n          }\r\n        })\r\n      }\r\n    },\r\n    getCorrespondingTaskPop(val){//切换不同的定时任务类别，显示不同的定时任务参数弹框\r\n      var alarmTaskTypeTxt='';\r\n      this.hasNextStep=false;//还原\r\n      this.taskTypeOptions.forEach((ele)=>{\r\n        if(val==ele.value){\r\n          alarmTaskTypeTxt=ele.label;\r\n        }\r\n      })\r\n      this.alarmTaskTypeTxt=alarmTaskTypeTxt;\r\n      \r\n      if(val=='urlCompare' || val=='apiScan' || val=='tokenTime' || val=='tokenCount' || val=='esSearch'){\r\n        this.alarmTaskType = val;\r\n        this.alertMark='';\r\n        if(val=='esSearch'){\r\n          this.hasNextStep=true;\r\n        }\r\n      }else if(val=='maliciousAccess' || val=='maliciousAccessOrg' || val=='maliciousAttack' || val=='cpuMax' || val=='memoryMax' || val=='networkMax' || val=='diskRootMax' || val=='diskRoot01Max' || val=='cpu_cmMax' || val=='memory_cmMax' || val=='diskRoot_cmMax' || val=='diskRoot01_cmMax'){\r\n        this.alarmTaskType = 'esSearch';\r\n        this.alertMark=val;\r\n      }\r\n      this.isShowTimingTask=true;\r\n    },\r\n    getTimingTask(){\r\n      this.$emit('getTimingTask');\r\n    }\r\n  },\r\n  components:{\r\n    timingTaskPop,\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/alarmTask/addAlarmTask.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"form-bg\"},[_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":2.5}},[_c('el-button',{staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.isShowSelect=true}}},[_vm._v(_vm._s(_vm.$t('lg.add')))])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-select',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowSelect),expression:\"isShowSelect\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"placeholder\":_vm.$t('lg.addalertingtype')},on:{\"change\":_vm.getCorrespondingTaskPop},model:{value:(_vm.taskTypeValue),callback:function ($$v) {_vm.taskTypeValue=$$v},expression:\"taskTypeValue\"}},_vm._l((_vm.taskTypeOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value,\"disabled\":item.disabled}})}))],1)],1)],1),_vm._v(\" \"),_c('timing-task-pop',{attrs:{\"isShow\":_vm.isShowTimingTask,\"isNeedRefreshAddTask\":true,\"hasNextStep\":_vm.hasNextStep,\"myTaskType\":_vm.alarmTaskType,\"myTaskTypeTxt\":_vm.alarmTaskTypeTxt,\"alertmark\":_vm.alertMark},on:{\"getTimingTask\":_vm.getTimingTask,\"setTimingTaskClose\":function($event){_vm.isShowTimingTask=false;}}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0c6d7a7e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/alarmTask/addAlarmTask.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0c6d7a7e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./addAlarmTask.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./addAlarmTask.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./addAlarmTask.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0c6d7a7e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./addAlarmTask.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/alarmTask/addAlarmTask.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"timingTask-wrapper\">\r\n    <h2 class=\"breadcrumb\">{{$t('lg.youjiang')}}</h2>\r\n    <add-alarm-task ref=\"addAlarmTask\" :taskTypeDisabledObj=\"taskTypeDisabledObj\" @getTimingTask=\"getTimingTask\"></add-alarm-task>\r\n    <div class=\"timingTaskContent\">\r\n      <div v-if=\"timingTask.length==0\" class=\"nodata-box\">{{$t('lg.nodata')}}</div>\r\n      <table v-if=\"timingTask.length>0\">\r\n        <thead>\r\n          <tr>\r\n            <th>{{$t('lg.id')}}</th>\r\n            <th>{{$t('lg.type')}}</th>\r\n            <th>执行频率</th>\r\n            <th>{{$t('lg.params')}}</th>\r\n            <th style=\"min-width:80px\">{{$t('lg.status')}}</th>\r\n            <th style=\"min-width:60px\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"item in timingTask\" :key=\"item.id\">\r\n            <td>{{item.id}}</td>\r\n            <td>{{item.taskTypeTxt}}</td>\r\n            <td>{{item.rate}}{{item.rateUnitValueTxt}}/{{$t('lg.count')}}</td>\r\n            <td class=\"taskDetailTd\" v-if=\"item.taskType=='tokenTime'\">\r\n              <p><span>{{$t('lg.notifytype')}}: </span>{{item.params.notificationType}}</p>\r\n              <p>\r\n                <span>{{$t('lg.recipient')}}: </span>\r\n                <span v-for=\"(items,index) in item.params.mailRecipient\" :key=\"index\"><i v-if=\"index>0\">、</i>{{items}}</span>\r\n              </p>\r\n              <p><span>{{$t('lg.emailtitle')}}: </span>{{item.params.mailSubject}}</p>\r\n              <p><span>{{$t('lg.domain')}}: </span>{{item.params.domain}}</p>\r\n              <p><span>{{$t('lg.yemian')}}: </span>{{!item.params.url || item.params.url=='*'?'未指定':item.params.url}}</p>\r\n              <p><span>{{$t('lg.timefactor')}}: </span>{{item.params.times}}</p>\r\n              <p><span>{{$t('lg.counts')}}: </span>{{item.params.count}}</p>\r\n              <p><span>{{$t('lg.queryinterval')}}: </span>{{item.params.timeInterval}}{{item.params.intervalUnitValTxt}}</p>\r\n            </td>\r\n            <td class=\"taskDetailTd\" v-if=\"item.taskType=='tokenCount'\">\r\n              <p><span>{{$t('lg.notifytype')}}: </span>{{item.params.notificationType}}</p>\r\n              <p>\r\n                <span>{{$t('lg.recipient')}}: </span>\r\n                <span v-for=\"(items,index) in item.params.mailRecipient\" :key=\"index\"><i v-if=\"index>0\">、</i>{{items}}</span>\r\n              </p>\r\n              <p><span>{{$t('lg.emailtitle')}}: </span>{{item.params.mailSubject}}</p>\r\n              <p><span>{{$t('lg.domain')}}: </span>{{item.params.domain}}</p>\r\n              <p><span>{{$t('lg.yemian')}}: </span>{{!item.params.url || item.params.url=='*'?'未指定':item.params.url}}</p>\r\n              <p><span>{{$t('lg.counts')}}: </span>{{item.params.count}}</p>\r\n              <p><span>{{$t('lg.queryinterval')}}: </span>{{item.params.timeInterval}}{{item.params.intervalUnitValTxt}}</p>\r\n            </td>\r\n            <td class=\"taskDetailTd\" v-if=\"item.taskType=='esSearch'\">\r\n              <p><span>{{$t('lg.notifytype')}}: </span>{{item.params.notificationType}}</p>\r\n              <p>\r\n                <span>{{$t('lg.recipient')}}: </span>\r\n                <span v-for=\"(items,index) in item.params.mailRecipient\" :key=\"index\"><i v-if=\"index>0\">、</i>{{items}}</span>\r\n              </p>\r\n              <p><span>{{$t('lg.emailtitle')}}: </span>{{item.params.mailSubject}}</p>\r\n              <!-- 以下得符合条件才展示 （报警任务的taskType也为esSearch但是报警任务的某些参数不需要展示出来)-->\r\n              <p v-if=\"item.params.logId\"><span>{{$t('lg.logsource')}}: </span>{{item.params.logId}}</p>\r\n              <p v-if=\"item.params.tmpsArray\">\r\n                <span>{{$t('lg.queryc')}}: </span>\r\n                <span v-for=\"(items,index) in item.params.tmpsArray\" :key=\"index\">{{items.keyId}} {{items.symbolId}} {{items.keyinputId}} {{items.andorId}} </span>\r\n              </p>\r\n              <p v-if=\"item.params.aggsId\"><span>{{$t('lg.aggfield')}}: </span><span>{{item.params.aggsId}}</span></p>\r\n              <p v-if=\"item.params.aggsId\"><span>{{$t('lg.metric')}}: </span><span>{{item.params.metricId}} {{item.params.symbol2Id}} {{item.params.metricinputId}}</span></p>\r\n              <p v-if=\"item.params.domainName\"><span>{{$t('lg.domain')}}: </span><span>{{item.params.domainName}}</span></p>\r\n              <p v-if=\"item.params.monThreshold\"><span>{{$t('lg.threshold')}}: </span><span>{{item.params.monThreshold}}</span></p>\r\n              <p v-if=\"item.params.minDocCount\"><span>{{$t('lg.threshold')}}: </span><span>{{item.params.minDocCount}}{{$t('lg.counts')}}</span></p>\r\n              <p><span>{{$t('lg.queryinterval')}}: </span>{{item.params.timeInterval}}{{item.params.intervalUnitValTxt}}</p>\r\n            </td>\r\n            <td class=\"taskDetailTd\" v-if=\"item.taskType=='urlCompare'\">\r\n              <p><span>{{$t('lg.notifytype')}}: </span>{{item.params.notificationType}}</p>\r\n              <p>\r\n                <span>{{$t('lg.recipient')}}: </span>\r\n                <span v-for=\"(items,index) in item.params.mailRecipient\" :key=\"index\"><i v-if=\"index>0\">、</i>{{items}}</span>\r\n              </p>\r\n              <p><span>{{$t('lg.emailtitle')}}: </span>{{item.params.mailSubject}}</p>\r\n              <p><span>数据来源: </span>{{item.params.apiIndicator=='0'?'页面':'API接口'}}</p>\r\n              <p><span>{{$t('lg.domain')}}: </span>{{item.params.domainName}}</p>\r\n\r\n              <p><span>是否将url加到配置: </span>{{item.params.addToConfig?'是':'否'}}</p>\r\n              <p v-show=\"item.params.addToConfig\"><span>手动代理防御设置默认值: </span>{{item.params.dfRequestTimeVal}}{{item.params.requestTimeUnitValTxt}}</p>\r\n              <p v-show=\"item.params.addToConfig\"><span>浏览器参数指标默认值: </span>{{item.params.defaultVerifyBrowser}}</p>\r\n              <p v-show=\"item.params.addToConfig\"><span>用户行为指标默认值: </span>{{item.params.defaultVerifyAgent}}</p>\r\n              <p v-show=\"item.params.addToConfig\"><span>动态指纹功能开启默认: </span>{{item.params.defaultVerifyToken=='1'?'开启':'关闭'}}</p>\r\n\r\n              <p><span>时间段一: </span>{{item.params.timeStrInterval}}{{item.params.strIntervalUnitValTxt}}</p>\r\n              <p><span>时间段二: </span>{{item.params.timeLteInterval}}{{item.params.lteIntervalUnitValTxt}}</p>\r\n            </td>\r\n            <td class=\"taskDetailTd\" v-if=\"item.taskType=='apiScan'\">\r\n              <p><span>{{$t('lg.notifytype')}}: </span>{{item.params.notificationType}}</p>\r\n              <p>\r\n                <span>{{$t('lg.recipient')}}: </span>\r\n                <span v-for=\"(items,index) in item.params.mailRecipient\" :key=\"index\"><i v-if=\"index>0\">、</i>{{items}}</span>\r\n              </p>\r\n              <p><span>{{$t('lg.emailtitle')}}: </span>{{item.params.mailSubject}}</p>\r\n              <p><span>是否发送邮件: </span>{{item.params.notification?'是':'否'}}</p>\r\n              <p><span>{{$t('lg.queryinterval')}}: </span>{{item.params.timeInterval}}{{item.params.intervalUnitValTxt}}</p>\r\n            </td>\r\n\r\n            <td><span :class=\"item.taskStatu==$t('lg.running')?'font-green':''\"><i :class=\"{'el-icon-loading':item.taskStatu=='操作中','el-icon-success shadow-icon-color-success':item.taskStatu=='运行中...','el-icon-warning':item.taskStatu=='已暂停'}\"></i> {{item.taskStatu}}</span></td>\r\n            <td class=\"text-center\">\r\n              <a href=\"javascript:;\" class=\"edit-del-a\" @click=\"item.params.aggsId?searchTime(item,'5m'):searchTime(item,{curPage:1,pageNum:10})\" v-if=\"item.taskType!='urlCompare' && !item.params.alertmark && item.taskType!='apiScan'\" ><i class=\"el-icon-search\"></i>{{$t('lg.query')}}</a>\r\n              <router-link :to=\"{path:'/objUpdate',query: {urlType:item.params.apiIndicator,domain:item.params.domainName,timeStrInterval:item.params.strInterval,timeLteInterval:item.params.lteInterval}}\" class=\"edit-del-a\" tag=\"a\" v-if=\"item.taskType=='urlCompare'\"><i class=\"el-icon-search\"></i>{{$t('lg.query')}}</router-link>\r\n              <router-link :to=\"{path:'/visitChart',query:{timeInterval:item.params.interval,theDomian:item.params.domainName,ipType:item.params.alertmark}}\" class=\"edit-del-a\" tag=\"a\" v-if=\"item.params.alertmark=='maliciousAccess' || item.params.alertmark=='maliciousAccessOrg'\"><i class=\"el-icon-search\"></i>{{$t('lg.detail')}}</router-link>\r\n              <router-link :to=\"{path:'/attackChart',query:{timeInterval:item.params.interval,theDomian:item.params.domainName}}\" class=\"edit-del-a\" tag=\"a\" v-if=\"item.params.alertmark=='maliciousAttack'\"><i class=\"el-icon-search\"></i>{{$t('lg.detail')}}</router-link>\r\n              <router-link :to=\"{path:'/dashboard',query:{timeInterval:item.params.interval,theChartType:item.params.alertmark}}\" class=\"edit-del-a\" tag=\"a\" v-if=\"item.params.alertmark=='cpuMax' || item.params.alertmark=='memoryMax' || item.params.alertmark=='networkMax' || item.params.alertmark=='diskRootMax' || item.params.alertmark=='diskRoot01Max' || item.params.alertmark=='cpu_cmMax' || item.params.alertmark=='memory_cmMax' || item.params.alertmark=='diskRoot_cmMax' || item.params.alertmark=='diskRoot01_cmMax'\"><i class=\"el-icon-search\"></i>{{$t('lg.detail')}}</router-link>\r\n\r\n              <a href=\"javascript:;\" class=\"edit-del-a\" @click=\"operationTask(item)\"><i :class=\"item.status=='stop'?'el-icon-circle-check font-green':'el-icon-circle-close font-red'\"></i><span v-if=\"item.status=='stop'\" title=\"点击开始任务\">{{$t('lg.start')}}</span><span v-if=\"item.status=='running'\" :title=\"$t('lg.ting')\">{{$t('lg.ting')}}</span></a>\r\n              <a href=\"javascript:;\" class=\"edit-del-a\" @click=\"editTask(item)\"><i class=\"el-icon-edit-outline font-blue\">{{$t('lg.edit')}}</i></a>\r\n              <a href=\"javascript:;\" class=\"edit-del-a\" @click=\"deleteTask(item)\"><i class=\"el-icon-delete\">{{$t('lg.delete')}}</i></a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <el-dialog :title=\"$t('lg.jiyushijiang')\" :visible.sync=\"timeVisible\" width=\"60%\" :before-close=\"timeClose\">\r\n      <div class=\"myTreeBox\">\r\n        <el-tree\r\n          :data=\"queryTimeData\"\r\n          :props=\"queryTimeTreeProps\"\r\n          ref=\"tree\"\r\n          :render-content=\"queryTimeRenderContent\"><!-- show-checkbox -->\r\n        </el-tree>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog :title=\"$t('lg.jiyucishu')\" :visible.sync=\"timesVisible\" width=\"60%\" :before-close=\"timesClose\">\r\n      <div class=\"myTreeBox\">\r\n        <el-tree\r\n          :data=\"querytimesData\"\r\n          :props=\"queryTimesTreeProps\"\r\n          ref=\"tree\"\r\n          :render-content=\"queryTimesRenderContent\"><!-- show-checkbox -->\r\n        </el-tree>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog :title=\"$t('lg.zidingyi')\" :visible.sync=\"esSearchVisible\" width=\"80%\" :before-close=\"esSearchClose\">\r\n      <log-rebuild v-if=\"!isQueryOrAggs && logId!='error.log'\" :tableKeyArr='tableKeyArrTask' :dynamicTag='taskLogsHeadData' @refilterColBy='refilterColByTask' @requeryRowBy='requeryRowByTask'></log-rebuild>\r\n      <div v-if=\"tbodyArr.length==0\" class=\"nodata-box\">{{$t('lg.nodata')}}</div>\r\n      <div v-if=\"tbodyArr.length>0\" class=\"logTableHeight\">\r\n        <logagg v-if=\"isQueryOrAggs\" :data=\"tbodyArr\" :piedata=\"piedata\" :linechartdata=\"linechartdata\" @getChangeLogInterval=\"esSearchDataChange\"></logagg>\r\n        <log-tables v-else ref=\"log_tables\" :logType=\"logId\" :tabheadData=\"taskLogsHeadData\" :tabodyData=\"taskLogsBodyData\" :totalNum=\"taskTotalNum\" @getChangeLogData=\"esSearchDataChange\" :isLogLoding=\"false\" :showSDURLMenu='showSDURLMenu'></log-tables>\r\n      </div>\r\n    </el-dialog>\r\n    <timing-task-pop :editData=\"editTaskItem\" :editTaskId=\"editTaskId\" :isShow=\"isShowTimingTaskEdit\" :isShowTimingTaskEdit=\"isShowTimingTaskEdit\" :myTaskType=\"editTaskItem.taskType\" :myTaskTypeTxt=\"editTaskItem.taskTypeTxt\" :alertmark=\"alertMark\" @getTimingTask=\"getTimingTask\" @setTimingTaskClose=\"isShowTimingTaskEdit=false\"></timing-task-pop>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as types from '@/store/types';\r\nimport client from \"@/components/es/connection\";\r\nimport toSddate from \"@/assets/js/tosddate\";\r\nimport toISO8601 from '@/assets/js/iso8601';\r\nimport { SERVER_API_URL } from \"@/conf/constvar\";\r\nimport addAlarmTask from '@/components/alarmTask/addAlarmTask';\r\nimport timingTaskPop from '@/components/alarmTask/timingTaskPop';\r\n\r\nimport {logskeys} from '@/assets/js/logskeys';\r\nimport logRebuild from \"@/components/logs/logRebuild\";\r\nimport logTables from '@/components/logs/logTables';\r\nimport logagg from '@/components/behavior/logagg';\r\nimport Emitter from 'element-ui/src/mixins/emitter';\r\n\r\nimport {handleAccesslogData , handleWaflogData} from '@/assets/js/tool';\r\nexport default {\r\n  mixins: [Emitter],\r\n  components: {\r\n    addAlarmTask,\r\n    timingTaskPop,\r\n    logRebuild,\r\n    logagg,\r\n    logTables,\r\n  },\r\n  data() {\r\n    return {\r\n      timeVisible: false, //基于时间的查询结果\r\n      timesVisible: false, //基于次数的查询结果\r\n      esSearchVisible:false,//基于自定义查询结果\r\n      isShowTimingTaskEdit: false, //编辑任务弹框显隐\r\n      editTaskId: null, //编辑当前任务的id\r\n\r\n      queryTimeData: [],\r\n      queryTimeTreeProps:{\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n\r\n      querytimesData: [],\r\n      queryTimesTreeProps:{\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n\r\n      timingTask: [],\r\n      editTaskItem: {},//存储被修改项\r\n      alertMark:'',\r\n      \r\n      //存储自定义类型的查询结果\r\n      logId:'',\r\n      tbodyArr:[],\r\n\r\n      tableKeyArrTask:[],//waf.log总共（默认）显示的字段\r\n      taskLogsHeadData:[],\r\n      taskLogsBodyData:[],\r\n      taskTotalNum:0,\r\n\r\n      piedata:{},\r\n      linechartdata:{},\r\n\r\n      isQueryOrAggsObj:'',//记录当前查询的对象（只记录基于自定义查询的对象: 有聚合的对象，用于频率改变再次调用查询，无聚合的对象，则用户翻页时再次调用查询）\r\n      isQueryOrAggs:false,//是否聚合\r\n     \r\n      // select 禁用选项\r\n      taskTypeDisabledObj:{\r\n        cpuMax:false,\r\n        memoryMax:false,\r\n        networkMax:false,\r\n        diskRootMax:false,\r\n        diskRoot01Max:false,\r\n\r\n        cpu_cmMax:false,\r\n        memory_cmMax:false,\r\n        diskRoot_cmMax:false,\r\n        diskRoot01_cmMax:false\r\n      },\r\n\r\n      filterObj:{\"match_all\": {}},\r\n      itemInfo:{},\r\n    }\r\n  },\r\n  created() {\r\n    this.$store.state.contentLoading=true;\r\n    this.getTimingTask();\r\n  },\r\n  methods: {\r\n    getCustomHeadData(logId){ // 获取waf.log、access.log表头（用户自定义的表头）\r\n      if(logId==\"waf.log\"){\r\n        this.tableKeyArrTask=[...logskeys.waf];\r\n        var url = SERVER_API_URL + '/pe/shadow/kv/taskWaf';\r\n        axios.get(url).then(res =>{\r\n          if(!res.data.data){\r\n            this.taskLogsHeadData = [...logskeys.waf];\r\n          }else{\r\n            this.taskLogsHeadData = res.data.data.value;\r\n          }\r\n        })\r\n      }else if(logId==\"access.log\"){\r\n        this.tableKeyArrTask=[...logskeys.access];\r\n        var url2 = SERVER_API_URL + '/pe/shadow/kv/taskAccess';\r\n        axios.get(url2).then(res =>{\r\n          if(!res.data.data){\r\n            this.taskLogsHeadData = [...logskeys.access]\r\n          }else{\r\n            this.taskLogsHeadData = res.data.data.value;\r\n          }\r\n        })\r\n      }\r\n    },\r\n    refilterColByTask(obj){\r\n      if(this.logId ==='waf.log'){\r\n        var url = SERVER_API_URL + `/pe/shadow/kv`;\r\n        if(!obj.length) return false\r\n          axios.post(url,{taskWaf:obj}).then(res=>{\r\n          if(Object.keys(res.data.data.Failure)){\r\n            axios.patch(url,{taskWaf:obj}).then(res=>{\r\n            })\r\n          }\r\n        })\r\n        this.taskLogsHeadData = obj;\r\n      }else if(this.logId ==='access.log'){\r\n        var url = SERVER_API_URL + `/pe/shadow/kv`;\r\n        axios.post(url,{taskAccess:obj}).then(res=>{\r\n          if(Object.keys(res.data.data.Failure)){\r\n            axios.patch(url,{taskAccess:obj}).then(res=>{\r\n            })\r\n          }\r\n        })\r\n        this.taskLogsHeadData = obj;\r\n      }\r\n    },\r\n    requeryRowByTask(obj){\r\n      // console.log(this.taskLogsHeadData)\r\n      this.filterObj=obj.requeryObj;\r\n      this.searchTime(this.itemInfo,{curPage:1,pageNum:10},true);\r\n      if(this.$refs.log_tables) this.$refs.log_tables.tabCurPage=1;//当用户点击查询后，查询结果的页码要回到第一页\r\n    },\r\n    getTimingTask() {//查看所有报警任务\r\n      var _this = this;\r\n      var url = SERVER_API_URL + \"monitoring/scheduling/tasks\";\r\n\r\n      _this.taskTypeDisabledObj={//先还原\r\n        cpuMax:false,\r\n        memoryMax:false,\r\n        networkMax:false,\r\n        diskRootMax:false,\r\n        diskRoot01Max:false,\r\n\r\n        cpu_cmMax:false,//cm\r\n        memory_cmMax:false,\r\n        diskRoot_cmMax:false,\r\n        diskRoot01_cmMax:false\r\n      }\r\n      axios.get(url).then(res =>{\r\n        // console.log(res);\r\n        if (res.data.responseCode == 0){\r\n          var resArray = res.data.data;\r\n          resArray.map(function(v, i){\r\n            // console.log(v)\r\n            v.rate = v.frequency.match(/(\\d*)(\\w*)/)[1];\r\n            v.rateUnitValue = v.frequency.match(/(\\d*)(\\w*)/)[2];\r\n            switch(v.rateUnitValue)\r\n            { \r\n              case \"m\":\r\n              v.rateUnitValueTxt=_this.$t('lg.minite');\r\n              break;\r\n              case \"h\":\r\n              v.rateUnitValueTxt=_this.$t('lg.hour');\r\n              break;\r\n              case \"d\":\r\n              v.rateUnitValueTxt=_this.$t('lg.day');\r\n              break;\r\n              case \"w\":\r\n              v.rateUnitValueTxt=_this.$t('lg.week');\r\n              break;\r\n              default:\r\n              v.rateUnitValueTxt=_this.$t('lg.year');\r\n            };\r\n\r\n            if(v.taskType == \"urlCompare\"){\r\n              v.params.timeStrInterval = v.params.strInterval.match(/(\\d*)(\\w*)/)[1];\r\n              v.params.strIntervalUnitVal = v.params.strInterval.match(/(\\d*)(\\w*)/)[2];\r\n              switch(v.params.strIntervalUnitVal)\r\n              { \r\n                case \"s\":\r\n                v.params.strIntervalUnitValTxt=_this.$t('lg.second');\r\n                break;\r\n                case \"m\":\r\n                v.params.strIntervalUnitValTxt=_this.$t('lg.minite');\r\n                break;\r\n                case \"h\":\r\n                v.params.strIntervalUnitValTxt=_this.$t('lg.hour');\r\n                break;\r\n                default:\r\n                v.params.strIntervalUnitValTxt=_this.$t('lg.day');\r\n              };\r\n\r\n              v.params.timeLteInterval = v.params.lteInterval.match(/(\\d*)(\\w*)/)[1];\r\n              v.params.lteIntervalUnitVal = v.params.lteInterval.match(/(\\d*)(\\w*)/)[2];\r\n              switch(v.params.lteIntervalUnitVal)\r\n              { \r\n                case \"s\":\r\n                v.params.lteIntervalUnitValTxt=_this.$t('lg.second');\r\n                break;\r\n                case \"m\":\r\n                v.params.lteIntervalUnitValTxt=_this.$t('lg.minite');\r\n                break;\r\n                case \"h\":\r\n                v.params.lteIntervalUnitValTxt=_this.$t('lg.hour');\r\n                break;\r\n                default:\r\n                v.params.lteIntervalUnitValTxt=_this.$t('lg.day');\r\n              };\r\n\r\n              if(v.params.addToConfig){\r\n                v.params.dfRequestTimeVal = v.params.defaultRequestTime.match(/(\\d*)(\\w*)/)[1];\r\n                v.params.requestTimeUnitVal = v.params.defaultRequestTime.match(/(\\d*)(\\w*)/)[2];\r\n                switch(v.params.requestTimeUnitVal)\r\n                { \r\n                  case \"ms\":\r\n                  v.params.requestTimeUnitValTxt=_this.$t('lg.ms');\r\n                  break;\r\n                  default:\r\n                  v.params.requestTimeUnitValTxt=_this.$t('lg.second');\r\n                };\r\n              }\r\n\r\n            }else{\r\n              v.params.timeInterval = v.params.interval.match(/(\\d*)(\\w*)/)[1];\r\n              v.params.intervalUnitVal = v.params.interval.match(/(\\d*)(\\w*)/)[2];\r\n              switch(v.params.intervalUnitVal)\r\n              { \r\n                case \"s\":\r\n                v.params.intervalUnitValTxt=_this.$t('lg.second');\r\n                break;\r\n                case \"m\":\r\n                v.params.intervalUnitValTxt=_this.$t('lg.minite');\r\n                break;\r\n                case \"h\":\r\n                v.params.intervalUnitValTxt=_this.$t('lg.hour');\r\n                break;\r\n                default:\r\n                v.params.intervalUnitValTxt=_this.$t('lg.day');\r\n              };\r\n            }\r\n\r\n            if(v.status == \"stop\") {\r\n              v.taskStatu = _this.$t('lg.stop');\r\n            } else if (v.status == \"running\"){\r\n              v.taskStatu = _this.$t('lg.running');\r\n            }\r\n            if(v.taskType == \"tokenTime\") {\r\n              v.taskTypeTxt = _this.$t('lg.tokentimebased');\r\n            }else if(v.taskType == \"tokenCount\") {\r\n              v.taskTypeTxt = _this.$t('lg.tokencountbased');\r\n            }else if(v.taskType=='esSearch'){\r\n              switch(v.params.alertmark)\r\n              { \r\n                case 'maliciousAccess':\r\n                v.taskTypeTxt = _this.$t('lg.maccessyuanipbased');\r\n                break;\r\n                case 'maliciousAccessOrg':\r\n                v.taskTypeTxt = _this.$t('lg.maccessorgipbased');\r\n                break;\r\n\r\n                case \"maliciousAttack\":\r\n                v.taskTypeTxt = _this.$t('lg.mattackyuanipbased');\r\n                break;\r\n\r\n                case \"cpuMax\":\r\n                v.taskTypeTxt = _this.$t('lg.cpubased');\r\n                _this.taskTypeDisabledObj.cpuMax=true;\r\n                break;\r\n\r\n                case \"cpu_cmMax\":\r\n                v.taskTypeTxt = '基于‘管理平台的CPU’报警';\r\n                _this.taskTypeDisabledObj.cpu_cmMax=true;\r\n                break;\r\n\r\n                case \"memoryMax\":\r\n                v.taskTypeTxt = _this.$t('lg.memorybased');\r\n                _this.taskTypeDisabledObj.memoryMax=true;\r\n                break;\r\n\r\n                case \"memory_cmMax\":\r\n                v.taskTypeTxt = '基于‘管理平台的MEMORY’报警';\r\n                _this.taskTypeDisabledObj.memory_cmMax=true;\r\n                break;\r\n                // case \"socketMax\":\r\n                // v.taskTypeTxt = \"基于‘TCP’报警\";\r\n                // break;\r\n                // case \"httpMax\":\r\n                // v.taskTypeTxt = \"基于‘HTTP请求数’报警\";\r\n                // break;\r\n                case \"networkMax\":\r\n                v.taskTypeTxt = _this.$t('lg.networkbased');\r\n                _this.taskTypeDisabledObj.networkMax=true;\r\n                break;\r\n\r\n                case \"diskRootMax\":\r\n                v.taskTypeTxt = _this.$t('lg.diskRootbased');\r\n                _this.taskTypeDisabledObj.diskRootMax=true;\r\n                break;\r\n\r\n                case \"diskRoot_cmMax\":\r\n                v.taskTypeTxt = '基于‘管理平台的磁盘空间（/）’报警';\r\n                _this.taskTypeDisabledObj.diskRoot_cmMax=true;\r\n                break;\r\n\r\n                case \"diskRoot01Max\":\r\n                v.taskTypeTxt = _this.$t('lg.diskRoot01based');\r\n                _this.taskTypeDisabledObj.diskRoot01Max=true;\r\n                break;\r\n\r\n                case \"diskRoot01_cmMax\":\r\n                v.taskTypeTxt = '基于‘管理平台的磁盘空间（/home）’报警';\r\n                _this.taskTypeDisabledObj.diskRoot01_cmMax=true;\r\n                break;\r\n\r\n                default:\r\n                v.taskTypeTxt = _this.$t('lg.customesqbased');\r\n              };\r\n            }else if(v.taskType == \"urlCompare\"){\r\n              v.taskTypeTxt = _this.$t('lg.objbased');\r\n            }else if(v.taskType == \"apiScan\"){\r\n              v.taskTypeTxt = _this.$t('lg.apiScanbased');\r\n            }\r\n          });\r\n          _this.timingTask = resArray;\r\n          _this.$store.state.contentLoading=false;\r\n        }else {\r\n          _this.$message.error(_this.$t('lg.failed')+': ' + res.data.data.message);\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    esSearchDataChange(params){//改变采样频率，则再次触发查询 //基于自定义查询\r\n      this.searchTime(this.isQueryOrAggsObj,params);\r\n    },\r\n    searchTime(item,params,flag){//查询 查询时间fromTime拿当前时间-查询间隔，endTime拿当前时间  注意： params 可能是采样频率（当使用了聚合字段会使查询结果为图表，这时可以改变折线图的采样频率，传入 params 表示查询发生在改变‘采样频率’时），params 也可能是一个对象 （不使用聚合字段会使查询结果为表格，表格有分页功能，此时params表示用户进行分页操作时传入的 分页信息）\r\n      // console.log(this.taskLogsHeadData)\r\n      this.itemInfo={...item}\r\n      if(params){\r\n        var fromNum = 0, sizeNum =0,timeDot='5m';\r\n        if(params.curPage){ //如果是params时表示分页信息的对象 \r\n          fromNum = (params.curPage-1)* params.pageNum;\r\n          sizeNum= params.pageNum;\r\n        }else{//否则为聚合时用户选择的采样频率\r\n          timeDot=params;\r\n        }\r\n      }\r\n\r\n      var intervalTime=0;//目前只有三个时间单位 h 和 d 、m\r\n      switch(item.params.intervalUnitVal)\r\n        { \r\n          case \"m\":\r\n            intervalTime=item.params.timeInterval*60*1000;\r\n            break;\r\n          case \"h\":\r\n            intervalTime=item.params.timeInterval*60*60*1000;\r\n            break;\r\n          default:\r\n            intervalTime=item.params.timeInterval*24*60*60*1000;\r\n        };\r\n      var sttime = new Date(Date.now()-intervalTime),\r\n          edtime = new Date(Date.now());\r\n      this.isQueryOrAggs=false;\r\n\r\n      if(item.taskType == \"tokenTime\") {\r\n        var fromTime=toISO8601(sttime),\r\n            endTime=toISO8601(edtime);    \r\n        var domainVal = item.params.domain,\r\n            urlVal = item.params.url=='*'?'*':'\\\"'+item.params.url+'\\\"',\r\n            multiple = item.params.times,\r\n            counts = item.params.count;\r\n        client.search({\r\n          index: \"shadow-filebeat*\",\r\n          body: {\r\n            \"size\": 0,\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"filter\":[\r\n                  {\r\n                    \"range\": {\r\n                      \"@timestamp\": {\r\n                        \"gte\": fromTime,\r\n                        \"lte\": endTime,\r\n                      }\r\n                    }\r\n                  }\r\n                ],\r\n                \"must\": [\r\n                  {\r\n                    \"query_string\": {\r\n                      \"query\": \"shadow.access.error_code:0\"\r\n                    }\r\n                  },\r\n                  {\r\n                    \"query_string\": {\r\n                      \"query\": \"shadow.access.response_code:200\"\r\n                    }\r\n                  },\r\n                  {\r\n                    \"bool\": {\r\n                      \"should\": [\r\n                        {\r\n                          \"query_string\": {\r\n                            \"query\": \"shadow.access.decrypted:1\"\r\n                          }\r\n                        },\r\n                        {\r\n                          \"query_string\": {\r\n                            \"query\": \"shadow.access.api_indicator:1\"\r\n                          }\r\n                        }\r\n                      ]\r\n                    }\r\n                  },\r\n                  {\r\n                    \"term\": {\r\n                     \"shadow.access.http_host\": domainVal\r\n                    }\r\n                  },\r\n                  {\r\n                    \"query_string\": {\r\n                      \"query\": \"shadow.access.org_url:\"+urlVal\r\n                    }\r\n                  }\r\n                ],\r\n                \"must_not\": [\r\n                  {\r\n                    \"match\": {\r\n                      \"shadow.access.token\":\"00000000000000000000000000000000\"\r\n                    }\r\n                  },{\r\n                    \"match\": {\r\n                      \"shadow.access.token\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"aggs\": {\r\n              \"GroupByUrl\":{\r\n                \"terms\": {\r\n                  \"field\": \"shadow.access.org_url\",\r\n                  \"size\": 500\r\n                },\r\n                \"aggs\": {\r\n                  \"GroupByToken\": {\r\n                    \"terms\": {\r\n                      \"field\": \"shadow.access.token\",\r\n                      \"size\": 500\r\n                    },\r\n                    \"aggs\": {\r\n                      \"avg_starttime\": {\r\n                        \"avg\": {\r\n                          \"field\": \"shadow.access.send_time\"\r\n                        }\r\n                      },\r\n                      \"avg_endtime\": {\r\n                        \"avg\": {\r\n                          \"field\": \"shadow.access.rec_time\"\r\n                        }\r\n                      },\r\n                      \"avg_time\": {\r\n                        \"bucket_script\": {\r\n                          \"buckets_path\": {\r\n                            \"avg_starttime\": \"avg_starttime\",\r\n                            \"avg_endtime\": \"avg_endtime\"\r\n                          },\r\n                          \"script\": \"params.avg_endtime-params.avg_starttime\"\r\n                        }\r\n                      },\r\n                      \"suspects\": {\r\n                        \"scripted_metric\": {\r\n                          \"init_script\": \"params._agg.suspects=[]\",\r\n                          \"map_script\": \"params._agg.suspects.add(Long.parseLong(params._source.shadow.access.rec_time)-Long.parseLong(params._source.shadow.access.send_time))\",\r\n                          \"combine_script\": \"ArrayList list=new ArrayList();for(s in params._agg.suspects){list.add(s);}return list\",\r\n                          \"reduce_script\": `double total_time=0;int length=0;for(a in params._aggs){for(i in a){total_time+=i;length+=1;}}double avg_time=total_time/length;int count=0;for(a in params._aggs){for(i in a){if(i>(avg_time*${multiple})){count+=1;}}}if(count>=${counts}){return count;}else{return null;}`\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }).then(res => {\r\n          // console.log(res)\r\n          let resultArr = [];\r\n          const buckets=res.aggregations.GroupByUrl.buckets;\r\n\r\n          buckets.forEach(ele=>{\r\n            let itemObj={\r\n                  label:ele.key,\r\n                  children:[]\r\n                };\r\n            const childrenObj=ele.GroupByToken.buckets;\r\n            childrenObj.forEach(val=>{\r\n              if(val.suspects.value){\r\n                itemObj.children.push({\r\n                  label:val.key,\r\n                  counts:val.doc_count,\r\n                  avgTime:(val.avg_time.value/1000).toFixed(2),\r\n                  suspects:val.suspects.value\r\n                })\r\n              }\r\n            })\r\n            resultArr.push(itemObj)\r\n          })\r\n          \r\n          this.queryTimeData = resultArr;\r\n          this.timeVisible = true;\r\n        });\r\n      }else if(item.taskType == \"tokenCount\"){\r\n        var fromTime=toISO8601(sttime),\r\n            endTime=toISO8601(edtime);    \r\n        var domainVal = item.params.domain,\r\n            urlVal = item.params.url=='*'?'*':'\\\"'+item.params.url+'\\\"',\r\n            prenum = item.params.count;\r\n        client.search({\r\n          index: \"shadow-filebeat*\",\r\n          body: {\r\n            \"size\": 10,\r\n            \"query\": {\r\n              \"bool\": {\r\n                \"filter\":[\r\n                    {\r\n                    \"range\": {\r\n                      \"@timestamp\": {\r\n                        \"gte\": fromTime,\r\n                        \"lte\": endTime,\r\n                      }\r\n                    }\r\n                  }\r\n                ],\r\n                \"must\": [\r\n                  {\r\n                    \"query_string\": {\r\n                      \"query\": \"shadow.access.error_code:0\"\r\n                    }\r\n                  },\r\n                  {\r\n                    \"query_string\": {\r\n                      \"query\": \"shadow.access.response_code:200\"\r\n                    }\r\n                  },\r\n                  {\r\n                    \"bool\": {\r\n                      \"should\": [\r\n                        {\r\n                          \"query_string\": {\r\n                            \"query\": \"shadow.access.decrypted:1\"\r\n                          }\r\n                        },\r\n                        {\r\n                          \"query_string\": {\r\n                            \"query\": \"shadow.access.api_indicator:1\"\r\n                          }\r\n                        }\r\n                      ]\r\n                    }\r\n                  },\r\n                  {\r\n                    \"term\": {\r\n                      \"shadow.access.http_host\": domainVal\r\n                    }\r\n                  },\r\n                  {\r\n                    \"query_string\": {\r\n                      \"query\": \"shadow.access.org_url:\"+urlVal\r\n                    }\r\n                  }\r\n                ],\r\n                \"must_not\": [\r\n                  {\r\n                    \"match\": {\r\n                      \"shadow.access.token\":\"00000000000000000000000000000000\"\r\n                    }\r\n                  },{\r\n                    \"match\": {\r\n                      \"shadow.access.token\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"aggs\": {\r\n              \"GroupByUrl\": {\r\n                \"terms\": {\r\n                  \"field\": \"shadow.access.org_url\",\r\n                  \"size\": 500\r\n                },\r\n                \"aggs\": {\r\n                  \"GroupByToken\": {\r\n                    \"terms\": {\r\n                      \"field\": \"shadow.access.token\",\r\n                      \"min_doc_count\": prenum,\r\n                      \"size\": 500\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }).then(res => {\r\n          // console.log(res)\r\n          let resultArr=[];\r\n          const buckets=res.aggregations.GroupByUrl.buckets;\r\n          buckets.forEach(ele=>{\r\n            let itemObj={\r\n                  label:ele.key,\r\n                  children:[]\r\n                };\r\n            const childrenObj=ele.GroupByToken.buckets;\r\n            childrenObj.forEach(val=>{\r\n              itemObj.children.push({\r\n                label:val.key,\r\n                counts:val.doc_count,\r\n              })\r\n            })\r\n            if(itemObj.children.length>0){\r\n              resultArr.push(itemObj)\r\n            }\r\n          })\r\n\r\n          this.querytimesData=resultArr;\r\n          this.timesVisible = true;\r\n        });\r\n      }else if(item.taskType == \"esSearch\"){\r\n        var _this =this;\r\n        _this.logId=item.params.logId;//记录当前自定义查询查询的是哪个日志\r\n        if(!flag)_this.getCustomHeadData(item.params.logId);\r\n        _this.isQueryOrAggsObj=item;//记录当前对象\r\n        \r\n        if(item.params.logId==\"access.log\"){//access.log日志查询的时间要减去8小时\r\n          var fromTime=toISO8601(sttime),\r\n              endTime=toISO8601(edtime); \r\n        }else{\r\n          var fromTime=toSddate(sttime),\r\n              endTime=toSddate(edtime);    \r\n        }\r\n        \r\n        var getLogId=item.params.logId==\"waf.log\"?\"shadow_\"+item.params.logId:item.params.logId;\r\n        var getLogIdStr=`/usr/local/shadow/logs/${getLogId}`;\r\n\r\n        var sumaryArrLen=item.params.tmpsArray.length;\r\n        var mustShould=[];\r\n        var wildcardMatch=[];\r\n        for(let i=0;i<sumaryArrLen;i++){\r\n          var andorIdI=item.params.tmpsArray[i].andorId;\r\n          if(andorIdI===\"OR\"){\r\n            mustShould[i]=\"should\"\r\n          }else if(andorIdI===\"AND\"){\r\n            mustShould[i]=\"must\"\r\n          }else{\r\n            mustShould[i]=\"must\"\r\n          }\r\n          var symbolIdI=item.params.tmpsArray[i].symbolId || '等于';\r\n          if(symbolIdI==\"包含\"){\r\n            wildcardMatch[i]=\"wildcard\"\r\n          }else if(symbolIdI==\"等于\"){\r\n            wildcardMatch[i]=\"match\"\r\n          }\r\n        }\r\n        if(sumaryArrLen>=2){\r\n          mustShould[sumaryArrLen-1]=mustShould[sumaryArrLen-2];\r\n        }\r\n\r\n        var myQueryJson={\r\n          \"must\": [\r\n            {\r\n              \"term\": {\r\n                \"log.file.path\": getLogIdStr\r\n              }\r\n            },{\r\n              \"range\": {\r\n              \"@timestamp\": {\r\n                \"from\":fromTime,\r\n                \"to\":endTime,\r\n                \"include_lower\": true,\r\n                \"include_upper\": true\r\n              }\r\n            }\r\n            }\r\n          ],\r\n          \"should\": [],\r\n          \"filter\": _this.filterObj\r\n        };\r\n        if(item.params.logId==\"access.log\"){\r\n          myQueryJson.must.push({\r\n            \"exists\": {\r\n              \"field\": \"shadow.access.method\"\r\n            }\r\n          })\r\n        }else{\r\n          myQueryJson.must_not={//过滤掉格式错误的数据 适用于waf.log 以及error.log\r\n            \"exists\": {\r\n              \"field\": \"error\"\r\n            }\r\n          }\r\n        }\r\n\r\n        for(let i=0;i<sumaryArrLen;i++){\r\n          var mustShouldK=mustShould[i];\r\n          var keyId=item.params.tmpsArray[i].keyId;\r\n          var keyinputId=item.params.tmpsArray[i].keyinputId;\r\n          var wildcardmatchJson={};\r\n          if(wildcardMatch[i]==\"wildcard\"){\r\n            var kyinputIdX=`*${keyinputId}*`;\r\n            wildcardmatchJson[keyId]=kyinputIdX;\r\n            myQueryJson[mustShouldK].push({\r\n              \"wildcard\": wildcardmatchJson\r\n            });\r\n          }else if(wildcardMatch[i]==\"match\"){\r\n            wildcardmatchJson[keyId]=keyinputId;\r\n            myQueryJson[mustShouldK].push({\r\n              \"match\": wildcardmatchJson   \r\n            });\r\n          }\r\n        }\r\n        // console.log(JSON.stringify(myQueryJson));\r\n\r\n        var aggsField=item.params.aggsId;//聚合\r\n        var aggsObj={};\r\n        if(aggsField){//如果使用聚合\r\n          var setTimeInterval=timeDot;//当查询用到聚合时会生成图表，图表会受到采样频率影响显示\r\n          var aggsCount=parseInt(item.params.metricinputId) || 1;\r\n          aggsObj={\r\n            \"GroupByMe\":{\r\n              \"terms\":{\r\n                \"field\":aggsField,\r\n                \"min_doc_count\":aggsCount,\r\n                \"size\":5\r\n              },\r\n              \"aggs\":{\r\n                \"time_his\":{\r\n                  \"date_histogram\":{\r\n                    \"field\":\"@timestamp\",\r\n                    \"interval\":setTimeInterval,\r\n                    \"min_doc_count\":0\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          _this.isQueryOrAggs=true;\r\n        }\r\n\r\n        var searchObj = {\r\n              index:\"shadow-filebeat*\",\r\n              body:{\r\n                \"size\": 10,\r\n                \"query\": {\r\n                  \"bool\": myQueryJson\r\n                },\r\n                \"aggs\": aggsObj \r\n              }\r\n            }\r\n        \r\n        if(!aggsField){\r\n          searchObj.from=fromNum;\r\n          searchObj.size=sizeNum;\r\n        }\r\n\r\n        client.search(searchObj).then((res)=>{\r\n          // console.log(res)\r\n          _this.esSearchVisible = true;\r\n          if(aggsField){\r\n            if(res.aggregations.GroupByMe.buckets.length>0){\r\n              let tarResult=res.aggregations.GroupByMe.buckets;\r\n              _this.tbodyArr=tarResult;//聚合里面的表格数据\r\n              var legend=[],pieData=[],seriesData=[],xaxisData=[],tmpxaxisData=[];\r\n              for(var i=0;i<tarResult.length;i++){\r\n                var dataI=tarResult[i];\r\n                for(var j=0;j<dataI.time_his.buckets.length;j++){\r\n                  var dataJ=dataI.time_his.buckets[j];\r\n                  if(!tmpxaxisData.includes(dataJ.key)){\r\n                    tmpxaxisData.push(dataJ.key); \r\n                  }\r\n                }\r\n              }\r\n              tmpxaxisData.sort((a,b)=>{\r\n                return a-b;\r\n              })\r\n\r\n              const LEGEND_STRING_LEN=40;\r\n              const LEGEND_LAST_STRING=4;\r\n\r\n              for(let ii=0;ii<tarResult.length;ii++){\r\n                let dataII=tarResult[ii];\r\n                let seriesItemData=[];\r\n\r\n                var arr0=tmpxaxisData.map((v)=>{return 0});\r\n\r\n                let bucketsKey;\r\n                if(dataII.key){\r\n                  bucketsKey=dataII.key.toString();\r\n                }else{\r\n                  bucketsKey=\" \";\r\n                }\r\n\r\n                if(bucketsKey.length>LEGEND_STRING_LEN){\r\n                  bucketsKey=bucketsKey.slice(0,LEGEND_STRING_LEN-LEGEND_LAST_STRING)+\"...\"+bucketsKey.slice(bucketsKey.length-LEGEND_LAST_STRING-1);\r\n                }\r\n\r\n                legend.push(bucketsKey);\r\n                pieData.push({\r\n                  value:dataII.doc_count,\r\n                  name:bucketsKey\r\n                });\r\n\r\n                for(let jj=0;jj<dataII.time_his.buckets.length;jj++){\r\n                  var dataJJ=dataII.time_his.buckets[jj];\r\n                  arr0[tmpxaxisData.indexOf(dataJJ.key)]=dataJJ.doc_count;\r\n                }\r\n\r\n                seriesData.push(\r\n                  {\r\n                    name:bucketsKey,\r\n                    type:'line',\r\n                    data:arr0\r\n                  }\r\n                );\r\n              }\r\n\r\n              if(item.params.logId==\"access.log\"){//access.log日志查询出来的时间不用减去8小时\r\n                xaxisData=tmpxaxisData.map((v)=>{\r\n                  return _this.transformMyDate(v)\r\n                });\r\n              }else{\r\n                xaxisData=tmpxaxisData.map((v)=>{\r\n                  return _this.transformMyDate2(v)\r\n                });\r\n              }\r\n              //把拿到的数据传入子组件\r\n              _this.piedata={\"legend\":legend,\"data\":pieData};\r\n              _this.linechartdata={\"legend\":legend,\"xaxisdata\":xaxisData,\"seriesdata\":seriesData};\r\n            }\r\n          }else{\r\n            let logResArr = res.hits.hits;\r\n            _this.tbodyArr=logResArr;\r\n            _this.taskTotalNum=res.hits.total.value;\r\n            if(res.hits.total.value>0){\r\n              // 获取waf.log表体\r\n              _this.taskLogsBodyData=[];\r\n              let bodyArr=[];\r\n              if(item.params.logId==\"waf.log\"){\r\n                // 获取waf.log表体数据\r\n                bodyArr = handleWaflogData(logResArr);\r\n              }else if(item.params.logId==\"access.log\"){\r\n                // 获取access.log表体数据\r\n                bodyArr = handleAccesslogData(logResArr);\r\n              }else if(item.params.logId==\"error.log\"){\r\n                var toSdDate = _this.$options.filters['toSdDate'];//获取使用局部的filter\r\n                logResArr.forEach((ele)=>{\r\n                  var eleSource = ele._source;\r\n\r\n                  var errLogsItem={};\r\n                  errLogsItem.date=toSdDate(eleSource['read_timestamp']);\r\n                  errLogsItem.level=eleSource.shadow.error.level;\r\n                  errLogsItem.message=eleSource.shadow.error.message;\r\n\r\n                  bodyArr.push(errLogsItem);\r\n                })\r\n              }\r\n              _this.taskLogsBodyData=bodyArr;\r\n            }\r\n          }\r\n        }).catch((err)=>{\r\n          console.log(err);\r\n        });           \r\n      }\r\n    },\r\n    transformMyDate(d){\r\n      d=new Date(d);\r\n      function pad(n){\r\n        return n<10 ? '0'+n : n\r\n      }\r\n      return pad(parseInt(d.getMonth())+1)+\"-\"+pad(d.getDate())+\" \"+pad(d.getHours())+':' + pad(d.getMinutes());\r\n    },\r\n    transformMyDate2(d){\r\n      d=new Date(d-8*60*60*1000);\r\n      function pad(n){\r\n        return n<10 ? '0'+n : n\r\n      }\r\n      return pad(parseInt(d.getMonth())+1)+\"-\"+pad(d.getDate())+\" \"+pad(d.getHours())+':'+ pad(d.getMinutes());\r\n    },\r\n    operationTask(item) {//启动&停止报警任务\r\n      var _this = this;\r\n      item.taskStatu = _this.$t('lg.handling');\r\n      \r\n      var taskId = item.id;\r\n      var thisStatus = \"\";\r\n      if(item.status == \"stop\"){\r\n        thisStatus = \"start\";\r\n      }else if(item.status == \"running\") {\r\n        thisStatus = \"stop\";\r\n      }\r\n      var url = SERVER_API_URL +\"monitoring/scheduling/tasks/\"+taskId+\"?option=\"+thisStatus;\r\n      axios.post(url,{}).then(res => {\r\n        if(res.data.responseCode == 0) {\r\n          _this.$message({\r\n            type: \"success\",\r\n            message: _this.$t('lg.success')\r\n          });\r\n          _this.getTimingTask();\r\n        }else {\r\n          _this.$message.error(_this.$t('lg.failed')+\": \" + res.data.data.message);\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    editTask(item) {//编辑报警任务 打开弹框\r\n      // console.log(item)\r\n      var _this = this;\r\n      if(item.status == \"running\") {\r\n        _this.$message.error(_this.$t('lg.isrunningandstop'));\r\n        return;\r\n      }\r\n      _this.editTaskId = item.id;\r\n      _this.editTaskItem = Object.assign({},item);//克隆对象  this.editTaskItem=item;改变了原对象\r\n      if(item.params.alertmark){\r\n        _this.alertMark=item.params.alertmark;\r\n      }else{\r\n        _this.alertMark='';\r\n      }\r\n      _this.isShowTimingTaskEdit = true;\r\n    },\r\n    deleteTask(item) {//删除当前定时报警任务\r\n      var _this = this;\r\n      if(item.status == \"running\") {\r\n        _this.$message.error(_this.$t('lg.isrunningandstop'));\r\n        return;\r\n      }\r\n      _this.$confirm(_this.$t('lg.isdelete'),_this.$t('lg.tip'),{\r\n        confirmButtonText: _this.$t('lg.yes'),\r\n        cancelButtonText: _this.$t('lg.cancel'),\r\n        type: 'warning'\r\n      }).then(()=>{\r\n        _this.$store.state.contentLoading=true;\r\n        var url = SERVER_API_URL + \"monitoring/scheduling/tasks/\" + item.id;\r\n        axios.delete(url).then(res => {\r\n          if(res.data.responseCode == 0){\r\n            _this.getTimingTask();\r\n            _this.$message({\r\n              type: \"success\",\r\n              message: _this.$t('lg.success')\r\n            });\r\n            _this.$refs.addAlarmTask.isShowSelect=false;\r\n          }else{\r\n            _this.$message.error(_this.$t('lg.failed')+\": \" + res.data.data.message);\r\n          }\r\n          _this.$store.state.contentLoading=false;\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n      }).catch(()=>{\r\n        this.$message({\r\n          type: 'info',\r\n          message: _this.$t('lg.cancel')\r\n        });\r\n      })\r\n    },\r\n    timeClose() {//关闭查询弹框\r\n      this.timeVisible = false;\r\n      this.queryTimeData=[];\r\n    },\r\n    timesClose() {//关闭查询弹框\r\n      this.timesVisible = false;\r\n      this.querytimesData=[];\r\n    },\r\n    esSearchClose(){//关闭查询弹框\r\n      this.esSearchVisible = false;\r\n      this.isQueryOrAggsObj='';\r\n      this.qinterval='5m';\r\n      this.tbodyArr=[];\r\n      this.broadcast('logRequery',\"clearData\");//清空孙组件里logRequry的查询条件输入框里的内容，要引入Emitter\r\n      this.filterObj={\"match_all\": {}};//清空孙组件里logRequry的被带入日志查询语句的查询条件\r\n    },\r\n    showSDURLMenu(index){\r\n      this.taskLogsBodyData.forEach(items=>{\r\n        items.showUMenuList=false;\r\n      })\r\n      // this.taskLogsBodyData[index].showUMenuList=true;\r\n      this.$set(this.taskLogsBodyData[index],'showUMenuList',true)\r\n    },\r\n    hideSDURLMenu(){\r\n      this.taskLogsBodyData.forEach(items=>{\r\n        items.showUMenuList=false;\r\n      })\r\n    },\r\n\r\n    queryTimeRenderContent(h, { node, data, store }){//重新渲染 自定义节点内容 基于访问时间 // {node.token}{node.counts}{data.avgTime}{data.suspects}\r\n      if(data.children){\r\n        return (\r\n          <span class=\"my-tree-node\">\r\n            <span>{node.label}</span>\r\n          </span>\r\n        );\r\n      }else{\r\n        return (\r\n          <span class=\"my-tree-node\">\r\n            <span>浏览器指纹：{node.label}，其平均访问时间为：{data.avgTime}秒，访问次数为：{data.counts}次</span>\r\n          </span>\r\n        );\r\n      }\r\n    },\r\n    queryTimesRenderContent(h, { node, data, store }){//重新渲染 自定义节点内容 基于访问次数\r\n      if(data.children){\r\n        return (\r\n          <span class=\"my-tree-node\">\r\n            <span>{node.label}</span>\r\n          </span>\r\n        );\r\n      }else{\r\n        return (\r\n          <p class=\"my-tree-node\">\r\n            <span>浏览器指纹：{node.label}，其访问次数为：{data.counts}次</span>\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  },\r\n  filters:{\r\n    toSdDate(val){\r\n      if(!val) return;\r\n      var d=new Date(val);\r\n      function pad(n){\r\n        return n<10 ? '0'+n : n\r\n      }\r\n      return d.getFullYear()+\"/\"+pad(parseInt(d.getMonth())+1)+\"/\"+pad(d.getDate())+\" \"+pad(d.getHours())+':'+pad(d.getMinutes())+\":\"+pad(d.getSeconds());\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.timingTask-wrapper{\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.timingTaskContent{\r\n  flex: 1;\r\n  overflow-y: auto;\r\n}\r\n.taskDetailTd{\r\n  max-width: 260px;\r\n}\r\n.taskDetailTd p {\r\n  padding: 3px 0px;\r\n  line-height: 18px;\r\n}\r\n.my-tree-node{ \r\n  white-space: normal;\r\n  word-break: break-all;\r\n  margin: 8px;\r\n  line-height: 20px!important;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/alarmTask/timingTask.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"timingTask-wrapper\"},[_c('h2',{staticClass:\"breadcrumb\"},[_vm._v(_vm._s(_vm.$t('lg.youjiang')))]),_vm._v(\" \"),_c('add-alarm-task',{ref:\"addAlarmTask\",attrs:{\"taskTypeDisabledObj\":_vm.taskTypeDisabledObj},on:{\"getTimingTask\":_vm.getTimingTask}}),_vm._v(\" \"),_c('div',{staticClass:\"timingTaskContent\"},[(_vm.timingTask.length==0)?_c('div',{staticClass:\"nodata-box\"},[_vm._v(_vm._s(_vm.$t('lg.nodata')))]):_vm._e(),_vm._v(\" \"),(_vm.timingTask.length>0)?_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(_vm._s(_vm.$t('lg.id')))]),_vm._v(\" \"),_c('th',[_vm._v(_vm._s(_vm.$t('lg.type')))]),_vm._v(\" \"),_c('th',[_vm._v(\"执行频率\")]),_vm._v(\" \"),_c('th',[_vm._v(_vm._s(_vm.$t('lg.params')))]),_vm._v(\" \"),_c('th',{staticStyle:{\"min-width\":\"80px\"}},[_vm._v(_vm._s(_vm.$t('lg.status')))]),_vm._v(\" \"),_c('th',{staticStyle:{\"min-width\":\"60px\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.timingTask),function(item){return _c('tr',{key:item.id},[_c('td',[_vm._v(_vm._s(item.id))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.taskTypeTxt))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.rate)+_vm._s(item.rateUnitValueTxt)+\"/\"+_vm._s(_vm.$t('lg.count')))]),_vm._v(\" \"),(item.taskType=='tokenTime')?_c('td',{staticClass:\"taskDetailTd\"},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.notifytype'))+\": \")]),_vm._v(_vm._s(item.params.notificationType))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.recipient'))+\": \")]),_vm._v(\" \"),_vm._l((item.params.mailRecipient),function(items,index){return _c('span',{key:index},[(index>0)?_c('i',[_vm._v(\"、\")]):_vm._e(),_vm._v(_vm._s(items))])})],2),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.emailtitle'))+\": \")]),_vm._v(_vm._s(item.params.mailSubject))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.domain'))+\": \")]),_vm._v(_vm._s(item.params.domain))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.yemian'))+\": \")]),_vm._v(_vm._s(!item.params.url || item.params.url=='*'?'未指定':item.params.url))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.timefactor'))+\": \")]),_vm._v(_vm._s(item.params.times))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.counts'))+\": \")]),_vm._v(_vm._s(item.params.count))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.queryinterval'))+\": \")]),_vm._v(_vm._s(item.params.timeInterval)+_vm._s(item.params.intervalUnitValTxt))])]):_vm._e(),_vm._v(\" \"),(item.taskType=='tokenCount')?_c('td',{staticClass:\"taskDetailTd\"},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.notifytype'))+\": \")]),_vm._v(_vm._s(item.params.notificationType))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.recipient'))+\": \")]),_vm._v(\" \"),_vm._l((item.params.mailRecipient),function(items,index){return _c('span',{key:index},[(index>0)?_c('i',[_vm._v(\"、\")]):_vm._e(),_vm._v(_vm._s(items))])})],2),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.emailtitle'))+\": \")]),_vm._v(_vm._s(item.params.mailSubject))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.domain'))+\": \")]),_vm._v(_vm._s(item.params.domain))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.yemian'))+\": \")]),_vm._v(_vm._s(!item.params.url || item.params.url=='*'?'未指定':item.params.url))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.counts'))+\": \")]),_vm._v(_vm._s(item.params.count))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.queryinterval'))+\": \")]),_vm._v(_vm._s(item.params.timeInterval)+_vm._s(item.params.intervalUnitValTxt))])]):_vm._e(),_vm._v(\" \"),(item.taskType=='esSearch')?_c('td',{staticClass:\"taskDetailTd\"},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.notifytype'))+\": \")]),_vm._v(_vm._s(item.params.notificationType))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.recipient'))+\": \")]),_vm._v(\" \"),_vm._l((item.params.mailRecipient),function(items,index){return _c('span',{key:index},[(index>0)?_c('i',[_vm._v(\"、\")]):_vm._e(),_vm._v(_vm._s(items))])})],2),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.emailtitle'))+\": \")]),_vm._v(_vm._s(item.params.mailSubject))]),_vm._v(\" \"),(item.params.logId)?_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.logsource'))+\": \")]),_vm._v(_vm._s(item.params.logId))]):_vm._e(),_vm._v(\" \"),(item.params.tmpsArray)?_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.queryc'))+\": \")]),_vm._v(\" \"),_vm._l((item.params.tmpsArray),function(items,index){return _c('span',{key:index},[_vm._v(_vm._s(items.keyId)+\" \"+_vm._s(items.symbolId)+\" \"+_vm._s(items.keyinputId)+\" \"+_vm._s(items.andorId)+\" \")])})],2):_vm._e(),_vm._v(\" \"),(item.params.aggsId)?_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.aggfield'))+\": \")]),_c('span',[_vm._v(_vm._s(item.params.aggsId))])]):_vm._e(),_vm._v(\" \"),(item.params.aggsId)?_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.metric'))+\": \")]),_c('span',[_vm._v(_vm._s(item.params.metricId)+\" \"+_vm._s(item.params.symbol2Id)+\" \"+_vm._s(item.params.metricinputId))])]):_vm._e(),_vm._v(\" \"),(item.params.domainName)?_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.domain'))+\": \")]),_c('span',[_vm._v(_vm._s(item.params.domainName))])]):_vm._e(),_vm._v(\" \"),(item.params.monThreshold)?_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.threshold'))+\": \")]),_c('span',[_vm._v(_vm._s(item.params.monThreshold))])]):_vm._e(),_vm._v(\" \"),(item.params.minDocCount)?_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.threshold'))+\": \")]),_c('span',[_vm._v(_vm._s(item.params.minDocCount)+_vm._s(_vm.$t('lg.counts')))])]):_vm._e(),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.queryinterval'))+\": \")]),_vm._v(_vm._s(item.params.timeInterval)+_vm._s(item.params.intervalUnitValTxt))])]):_vm._e(),_vm._v(\" \"),(item.taskType=='urlCompare')?_c('td',{staticClass:\"taskDetailTd\"},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.notifytype'))+\": \")]),_vm._v(_vm._s(item.params.notificationType))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.recipient'))+\": \")]),_vm._v(\" \"),_vm._l((item.params.mailRecipient),function(items,index){return _c('span',{key:index},[(index>0)?_c('i',[_vm._v(\"、\")]):_vm._e(),_vm._v(_vm._s(items))])})],2),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.emailtitle'))+\": \")]),_vm._v(_vm._s(item.params.mailSubject))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"数据来源: \")]),_vm._v(_vm._s(item.params.apiIndicator=='0'?'页面':'API接口'))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.domain'))+\": \")]),_vm._v(_vm._s(item.params.domainName))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"是否将url加到配置: \")]),_vm._v(_vm._s(item.params.addToConfig?'是':'否'))]),_vm._v(\" \"),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.params.addToConfig),expression:\"item.params.addToConfig\"}]},[_c('span',[_vm._v(\"手动代理防御设置默认值: \")]),_vm._v(_vm._s(item.params.dfRequestTimeVal)+_vm._s(item.params.requestTimeUnitValTxt))]),_vm._v(\" \"),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.params.addToConfig),expression:\"item.params.addToConfig\"}]},[_c('span',[_vm._v(\"浏览器参数指标默认值: \")]),_vm._v(_vm._s(item.params.defaultVerifyBrowser))]),_vm._v(\" \"),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.params.addToConfig),expression:\"item.params.addToConfig\"}]},[_c('span',[_vm._v(\"用户行为指标默认值: \")]),_vm._v(_vm._s(item.params.defaultVerifyAgent))]),_vm._v(\" \"),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.params.addToConfig),expression:\"item.params.addToConfig\"}]},[_c('span',[_vm._v(\"动态指纹功能开启默认: \")]),_vm._v(_vm._s(item.params.defaultVerifyToken=='1'?'开启':'关闭'))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"时间段一: \")]),_vm._v(_vm._s(item.params.timeStrInterval)+_vm._s(item.params.strIntervalUnitValTxt))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"时间段二: \")]),_vm._v(_vm._s(item.params.timeLteInterval)+_vm._s(item.params.lteIntervalUnitValTxt))])]):_vm._e(),_vm._v(\" \"),(item.taskType=='apiScan')?_c('td',{staticClass:\"taskDetailTd\"},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.notifytype'))+\": \")]),_vm._v(_vm._s(item.params.notificationType))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.recipient'))+\": \")]),_vm._v(\" \"),_vm._l((item.params.mailRecipient),function(items,index){return _c('span',{key:index},[(index>0)?_c('i',[_vm._v(\"、\")]):_vm._e(),_vm._v(_vm._s(items))])})],2),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.emailtitle'))+\": \")]),_vm._v(_vm._s(item.params.mailSubject))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"是否发送邮件: \")]),_vm._v(_vm._s(item.params.notification?'是':'否'))]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.queryinterval'))+\": \")]),_vm._v(_vm._s(item.params.timeInterval)+_vm._s(item.params.intervalUnitValTxt))])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('span',{class:item.taskStatu==_vm.$t('lg.running')?'font-green':''},[_c('i',{class:{'el-icon-loading':item.taskStatu=='操作中','el-icon-success shadow-icon-color-success':item.taskStatu=='运行中...','el-icon-warning':item.taskStatu=='已暂停'}}),_vm._v(\" \"+_vm._s(item.taskStatu))])]),_vm._v(\" \"),_c('td',{staticClass:\"text-center\"},[(item.taskType!='urlCompare' && !item.params.alertmark && item.taskType!='apiScan')?_c('a',{staticClass:\"edit-del-a\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){item.params.aggsId?_vm.searchTime(item,'5m'):_vm.searchTime(item,{curPage:1,pageNum:10})}}},[_c('i',{staticClass:\"el-icon-search\"}),_vm._v(_vm._s(_vm.$t('lg.query')))]):_vm._e(),_vm._v(\" \"),(item.taskType=='urlCompare')?_c('router-link',{staticClass:\"edit-del-a\",attrs:{\"to\":{path:'/objUpdate',query: {urlType:item.params.apiIndicator,domain:item.params.domainName,timeStrInterval:item.params.strInterval,timeLteInterval:item.params.lteInterval}},\"tag\":\"a\"}},[_c('i',{staticClass:\"el-icon-search\"}),_vm._v(_vm._s(_vm.$t('lg.query')))]):_vm._e(),_vm._v(\" \"),(item.params.alertmark=='maliciousAccess' || item.params.alertmark=='maliciousAccessOrg')?_c('router-link',{staticClass:\"edit-del-a\",attrs:{\"to\":{path:'/visitChart',query:{timeInterval:item.params.interval,theDomian:item.params.domainName,ipType:item.params.alertmark}},\"tag\":\"a\"}},[_c('i',{staticClass:\"el-icon-search\"}),_vm._v(_vm._s(_vm.$t('lg.detail')))]):_vm._e(),_vm._v(\" \"),(item.params.alertmark=='maliciousAttack')?_c('router-link',{staticClass:\"edit-del-a\",attrs:{\"to\":{path:'/attackChart',query:{timeInterval:item.params.interval,theDomian:item.params.domainName}},\"tag\":\"a\"}},[_c('i',{staticClass:\"el-icon-search\"}),_vm._v(_vm._s(_vm.$t('lg.detail')))]):_vm._e(),_vm._v(\" \"),(item.params.alertmark=='cpuMax' || item.params.alertmark=='memoryMax' || item.params.alertmark=='networkMax' || item.params.alertmark=='diskRootMax' || item.params.alertmark=='diskRoot01Max' || item.params.alertmark=='cpu_cmMax' || item.params.alertmark=='memory_cmMax' || item.params.alertmark=='diskRoot_cmMax' || item.params.alertmark=='diskRoot01_cmMax')?_c('router-link',{staticClass:\"edit-del-a\",attrs:{\"to\":{path:'/dashboard',query:{timeInterval:item.params.interval,theChartType:item.params.alertmark}},\"tag\":\"a\"}},[_c('i',{staticClass:\"el-icon-search\"}),_vm._v(_vm._s(_vm.$t('lg.detail')))]):_vm._e(),_vm._v(\" \"),_c('a',{staticClass:\"edit-del-a\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){_vm.operationTask(item)}}},[_c('i',{class:item.status=='stop'?'el-icon-circle-check font-green':'el-icon-circle-close font-red'}),(item.status=='stop')?_c('span',{attrs:{\"title\":\"点击开始任务\"}},[_vm._v(_vm._s(_vm.$t('lg.start')))]):_vm._e(),(item.status=='running')?_c('span',{attrs:{\"title\":_vm.$t('lg.ting')}},[_vm._v(_vm._s(_vm.$t('lg.ting')))]):_vm._e()]),_vm._v(\" \"),_c('a',{staticClass:\"edit-del-a\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){_vm.editTask(item)}}},[_c('i',{staticClass:\"el-icon-edit-outline font-blue\"},[_vm._v(_vm._s(_vm.$t('lg.edit')))])]),_vm._v(\" \"),_c('a',{staticClass:\"edit-del-a\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){_vm.deleteTask(item)}}},[_c('i',{staticClass:\"el-icon-delete\"},[_vm._v(_vm._s(_vm.$t('lg.delete')))])])],1)])}))]):_vm._e()]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.$t('lg.jiyushijiang'),\"visible\":_vm.timeVisible,\"width\":\"60%\",\"before-close\":_vm.timeClose},on:{\"update:visible\":function($event){_vm.timeVisible=$event}}},[_c('div',{staticClass:\"myTreeBox\"},[_c('el-tree',{ref:\"tree\",attrs:{\"data\":_vm.queryTimeData,\"props\":_vm.queryTimeTreeProps,\"render-content\":_vm.queryTimeRenderContent}})],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.$t('lg.jiyucishu'),\"visible\":_vm.timesVisible,\"width\":\"60%\",\"before-close\":_vm.timesClose},on:{\"update:visible\":function($event){_vm.timesVisible=$event}}},[_c('div',{staticClass:\"myTreeBox\"},[_c('el-tree',{ref:\"tree\",attrs:{\"data\":_vm.querytimesData,\"props\":_vm.queryTimesTreeProps,\"render-content\":_vm.queryTimesRenderContent}})],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.$t('lg.zidingyi'),\"visible\":_vm.esSearchVisible,\"width\":\"80%\",\"before-close\":_vm.esSearchClose},on:{\"update:visible\":function($event){_vm.esSearchVisible=$event}}},[(!_vm.isQueryOrAggs && _vm.logId!='error.log')?_c('log-rebuild',{attrs:{\"tableKeyArr\":_vm.tableKeyArrTask,\"dynamicTag\":_vm.taskLogsHeadData},on:{\"refilterColBy\":_vm.refilterColByTask,\"requeryRowBy\":_vm.requeryRowByTask}}):_vm._e(),_vm._v(\" \"),(_vm.tbodyArr.length==0)?_c('div',{staticClass:\"nodata-box\"},[_vm._v(_vm._s(_vm.$t('lg.nodata')))]):_vm._e(),_vm._v(\" \"),(_vm.tbodyArr.length>0)?_c('div',{staticClass:\"logTableHeight\"},[(_vm.isQueryOrAggs)?_c('logagg',{attrs:{\"data\":_vm.tbodyArr,\"piedata\":_vm.piedata,\"linechartdata\":_vm.linechartdata},on:{\"getChangeLogInterval\":_vm.esSearchDataChange}}):_c('log-tables',{ref:\"log_tables\",attrs:{\"logType\":_vm.logId,\"tabheadData\":_vm.taskLogsHeadData,\"tabodyData\":_vm.taskLogsBodyData,\"totalNum\":_vm.taskTotalNum,\"isLogLoding\":false,\"showSDURLMenu\":_vm.showSDURLMenu},on:{\"getChangeLogData\":_vm.esSearchDataChange}})],1):_vm._e()],1),_vm._v(\" \"),_c('timing-task-pop',{attrs:{\"editData\":_vm.editTaskItem,\"editTaskId\":_vm.editTaskId,\"isShow\":_vm.isShowTimingTaskEdit,\"isShowTimingTaskEdit\":_vm.isShowTimingTaskEdit,\"myTaskType\":_vm.editTaskItem.taskType,\"myTaskTypeTxt\":_vm.editTaskItem.taskTypeTxt,\"alertmark\":_vm.alertMark},on:{\"getTimingTask\":_vm.getTimingTask,\"setTimingTaskClose\":function($event){_vm.isShowTimingTaskEdit=false}}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2098ca74\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/alarmTask/timingTask.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2098ca74\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./timingTask.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./timingTask.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./timingTask.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2098ca74\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./timingTask.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/alarmTask/timingTask.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div v-if=\"data.length>0\">\r\n    <div>\r\n      <span>{{$t('lg.frequency')}}：</span>\r\n      <el-select v-model=\"qinterval\" :placeholder=\"$t('lg.frequency')\" @change=\"intervalChange\">\r\n        <el-option\r\n          v-for=\"(item,index) in intervals\"\r\n          :key=\"index\"\r\n          :label=\"item.name\"\r\n          :value=\"item.value\">\r\n        </el-option>\r\n      </el-select>\r\n    </div>\r\n    <div class=\"search-result-wrapper\">\r\n      <div class=\"search-result\" style=\"margin-right:20px;\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"80%\">key</th>\r\n              <th>doc_count</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"item in data\">\r\n              <td>{{item.key}}</td>\r\n              <td>{{item.doc_count}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"search-result\">\r\n        <div id=\"piechart\" style=\"height:260px;width: 100%\"></div>\r\n      </div>\r\n    </div>\r\n    <div style=\"margin-top:20px;\">\r\n      <div id=\"linechart\" style=\"height:320px;width: 100%\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nlet echarts = require('echarts/lib/echarts');\r\nrequire('echarts/lib/chart/pie')\r\nrequire('echarts/lib/chart/line')\r\nrequire('echarts/lib/component/tooltip') // 提示框\r\nrequire('echarts/lib/component/title')\r\nrequire('echarts/lib/component/legend') // 图例\r\nexport default {\r\n  props:{\r\n    data:{\r\n      type:Array\r\n    },\r\n    piedata:{\r\n      type:Object\r\n    },\r\n    linechartdata:{\r\n      type:Object\r\n    }\r\n  },\r\n  watch: {\r\n    'data':function(){\r\n      if(this.data.length>0){\r\n        let _this=this;\r\n        _this.piechart(_this.piedata.legend,_this.piedata.data);\r\n        _this.linechart(_this.linechartdata.legend,_this.linechartdata.xaxisdata,_this.linechartdata.seriesdata);\r\n      }\r\n    },\r\n    '$store.state.isMenuShow':function(){\r\n      this.pieChart.resize();\r\n      this.lineChart.resize();\r\n    }\r\n  },\r\n  mounted() {\r\n    let _this=this;\r\n    if(_this.data.length>0){\r\n      _this.piechart(_this.piedata.legend,_this.piedata.data);\r\n      _this.linechart(_this.linechartdata.legend,_this.linechartdata.xaxisdata,_this.linechartdata.seriesdata);\r\n    }\r\n    window.addEventListener(\"resize\", () => {\r\n      _this.pieChart.resize();\r\n      _this.lineChart.resize();\r\n    });\r\n  },\r\n  data(){\r\n    return{\r\n      intervals:[\r\n        {\r\n          value:\"5m\",\r\n          name:\"5分钟\"\r\n        },{\r\n          value:\"30m\",\r\n          name:\"30分钟\"\r\n        },{\r\n          value:\"1h\",\r\n          name:\"1小时\"\r\n        },{\r\n          value:\"5h\",\r\n          name:\"5小时\"\r\n        },{\r\n          value:\"1d\",\r\n          name:\"1天\"\r\n        },{\r\n          value:\"7d\",\r\n          name:\"7天\"\r\n        },{\r\n          value:\"1M\",\r\n          name:\"1个月\"\r\n        }\r\n      ],\r\n      qinterval:'5m',\r\n      pieChart:null,\r\n      lineChart:null\r\n    }\r\n  },\r\n  methods: {\r\n    intervalChange(){//改变采样频率，则再次触发查询\r\n      this.$emit(\"getChangeLogInterval\",this.qinterval)\r\n    },\r\n    piechart(legend,data){\r\n      this.pieChart=echarts.init(document.getElementById('piechart'));\r\n      let options = {\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n              orient: 'vertical',\r\n              x: 'left',\r\n              //data:['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n              data:legend\r\n            },\r\n            series: [\r\n              {\r\n                name:'占比',\r\n                type:'pie',\r\n                radius: ['45%', '60%'],\r\n                center: ['70%', '35%'],\r\n                avoidLabelOverlap: false,\r\n                label: {\r\n                normal: {\r\n                  show: false,\r\n                  position: 'center'\r\n                },\r\n                emphasis: {\r\n                  show: false,\r\n                  textStyle: {\r\n                    fontSize: '30',\r\n                    fontWeight: 'bold'\r\n                  }\r\n                }\r\n              },\r\n              labelLine: {\r\n                normal: {\r\n                  show: false\r\n                }\r\n              },\r\n              // data:[\r\n              //     {value:335, name:'直接访问'},\r\n              // ]\r\n              data:data\r\n            }\r\n          ]\r\n        };\r\n      //console.log(options)\r\n      this.pieChart.setOption(options,true);\r\n    },\r\n    linechart(legend,xData,seriesData){\r\n      this.lineChart=echarts.init(document.getElementById('linechart'));\r\n      var options = {\r\n            title: {\r\n              // text: '折线图堆叠'\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis'\r\n            },\r\n            legend: {\r\n              //data:['邮件营销','联盟广告','视频广告','直接访问','搜索引擎']\r\n              data:legend\r\n            },\r\n            grid: {\r\n              left: '3%',\r\n              right: '4%',\r\n              bottom: '3%',\r\n              containLabel: true\r\n            },\r\n            xAxis: {\r\n              type: 'category',\r\n              // boundaryGap: false,\r\n              // data: ['周一','周二','周三','周四','周五','周六','周日']\r\n              data:xData\r\n            },\r\n            yAxis: {\r\n              type: 'value'\r\n            },\r\n            // series: [\r\n            //     {\r\n            //         name:'邮件营销',\r\n            //         type:'line',\r\n            //         stack: '总量',\r\n            //         data:[120, 132, 101, 134, 90, 230, 210]\r\n            //     },\r\n            // ]\r\n            series:seriesData\r\n        };\r\n      this.lineChart.setOption(options,true);\r\n    }\r\n  },\r\n  beforeDestroy(){\r\n    window.removeEventListener('resize',function(){});\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.icon-row{line-height: 40px}\r\n.icon-row i{cursor: pointer; margin-right: 8px;}\r\n.search-result-wrapper{display: flex;margin-top: 20px;}\r\n.search-result{flex:1;}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/behavior/logagg.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.data.length>0)?_c('div',[_c('div',[_c('span',[_vm._v(_vm._s(_vm.$t('lg.frequency'))+\"：\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"placeholder\":_vm.$t('lg.frequency')},on:{\"change\":_vm.intervalChange},model:{value:(_vm.qinterval),callback:function ($$v) {_vm.qinterval=$$v},expression:\"qinterval\"}},_vm._l((_vm.intervals),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.name,\"value\":item.value}})}))],1),_vm._v(\" \"),_c('div',{staticClass:\"search-result-wrapper\"},[_c('div',{staticClass:\"search-result\",staticStyle:{\"margin-right\":\"20px\"}},[_c('table',[_vm._m(0),_vm._v(\" \"),_c('tbody',_vm._l((_vm.data),function(item){return _c('tr',[_c('td',[_vm._v(_vm._s(item.key))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.doc_count))])])}))])]),_vm._v(\" \"),_vm._m(1)]),_vm._v(\" \"),_vm._m(2)]):_vm._e()}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{attrs:{\"width\":\"80%\"}},[_vm._v(\"key\")]),_vm._v(\" \"),_c('th',[_vm._v(\"doc_count\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"search-result\"},[_c('div',{staticStyle:{\"height\":\"260px\",\"width\":\"100%\"},attrs:{\"id\":\"piechart\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('div',{staticStyle:{\"height\":\"320px\",\"width\":\"100%\"},attrs:{\"id\":\"linechart\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4c495363\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/behavior/logagg.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4c495363\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./logagg.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./logagg.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./logagg.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4c495363\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./logagg.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/behavior/logagg.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}